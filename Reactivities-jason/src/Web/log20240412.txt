2024-04-12 00:00:33.052 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:00:33.742 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:00:34.073 +07:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:00:34.103 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:00:34.125 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:00:34.135 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:00:34.136 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:00:34.143 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:00:36.113 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:00:44.912 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:00:45.441 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:00:45.747 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:00:45.767 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:00:45.788 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:00:45.800 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:00:45.802 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:00:45.812 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:00:47.645 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:00:48.159 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:00:48.418 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:00:48.435 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:00:48.508 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:00:48.532 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:00:48.534 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:00:48.545 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:00:48.820 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:00:48.820 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:00:48.821 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:00:48.821 +07:00 [INF] Hosting environment: Development
2024-04-12 00:00:48.821 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:00:48.898 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:00:48.898 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:00:48.952 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 54.9976ms
2024-04-12 00:00:48.955 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:00:48.996 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 99.0794ms
2024-04-12 00:00:48.998 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:00:49.003 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 5.1287ms
2024-04-12 00:00:49.043 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:00:49.045 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:00:49.056 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 10.2632ms
2024-04-12 00:00:49.056 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 13.0017ms
2024-04-12 00:00:49.105 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:00:49.106 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 1.4262ms
2024-04-12 00:00:49.106 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:00:49.157 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 00:00:49.158 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 0.9777ms
2024-04-12 00:00:49.158 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 00:00:49.234 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 00:00:49.235 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 1.4327ms
2024-04-12 00:00:49.235 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 00:01:13.844 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 134
2024-04-12 00:01:13.847 +07:00 [INF] CORS policy execution failed.
2024-04-12 00:01:13.847 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 00:01:13.851 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:01:14.168 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 00:01:14.478 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 00:01:14.505 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 00:01:14.516 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:01:14.518 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No sign-in authentication handler is registered for the scheme 'Identity.Application'. The registered sign-in schemes are: Identity.Bearer. Did you forget to call AddAuthentication().AddCookie("Identity.Application",...)?
   at Microsoft.AspNetCore.Authentication.AuthenticationService.SignInAsync(HttpContext context, String scheme, ClaimsPrincipal principal, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(TUser user, AuthenticationProperties authenticationProperties, IEnumerable`1 additionalClaims)
   at Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(TUser user, Boolean isPersistent, String loginProvider, Boolean bypassTwoFactor)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(TUser user, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(String userName, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions.<>c__1`1.<<MapIdentityApi>b__1_1>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapPost1>g__RequestHandler|4>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 00:01:14.540 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 500 null text/plain 695.8732ms
2024-04-12 00:02:02.895 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:02:03.422 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:02:03.738 +07:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:02:03.761 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:02:03.783 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:02:03.794 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:02:03.795 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:02:03.804 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:02:05.436 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:02:05.921 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:02:06.206 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:02:06.222 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:02:06.245 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:02:06.257 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:02:06.258 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:02:06.265 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:02:06.502 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:02:06.503 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:02:06.504 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:02:06.504 +07:00 [INF] Hosting environment: Development
2024-04-12 00:02:06.504 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:02:06.580 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:02:06.580 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:02:06.676 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 97.2126ms
2024-04-12 00:02:06.676 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 97.1543ms
2024-04-12 00:02:06.732 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:02:06.740 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 8.385ms
2024-04-12 00:02:06.749 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:02:06.751 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 1.8074ms
2024-04-12 00:02:06.843 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:02:06.847 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 4.0653ms
2024-04-12 00:02:06.850 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:02:06.851 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 00:02:06.852 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 0.7079ms
2024-04-12 00:02:06.852 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 00:02:06.943 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 00:02:06.944 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 1.5442ms
2024-04-12 00:02:06.945 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 00:02:13.326 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:02:13.327 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 1.1887ms
2024-04-12 00:02:13.368 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:02:13.368 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.7775ms
2024-04-12 00:02:13.410 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:02:13.411 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 0.7643ms
2024-04-12 00:02:13.412 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:02:13.439 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 00:02:13.441 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 2.2918ms
2024-04-12 00:02:13.441 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 00:02:13.504 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 00:02:13.505 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 0.9778ms
2024-04-12 00:02:13.506 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 00:02:35.095 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 134
2024-04-12 00:02:35.099 +07:00 [INF] CORS policy execution failed.
2024-04-12 00:02:35.099 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 00:02:35.101 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:02:35.372 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 00:02:35.644 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 00:02:35.669 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 00:02:35.682 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 00:02:35.684 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:02:35.688 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 593.5428ms
2024-04-12 00:02:47.111 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 134
2024-04-12 00:02:47.113 +07:00 [INF] CORS policy execution failed.
2024-04-12 00:02:47.113 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 00:02:47.114 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:02:47.222 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 00:02:47.355 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 00:02:47.359 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 00:02:47.364 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 00:02:47.365 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:02:47.365 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 254.4984ms
2024-04-12 00:02:59.345 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 00:02:59.346 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 00:02:59.540 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 00:02:59.555 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 00:02:59.555 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 209.9865ms
2024-04-12 00:03:08.099 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:03:08.105 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:03:08.107 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-04-12 00:03:08.122 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 500 null text/plain; charset=utf-8 22.6422ms
2024-04-12 00:03:56.746 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:03:57.277 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:03:57.652 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:03:57.677 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:03:57.700 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:03:57.712 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:03:57.714 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:03:57.724 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:03:59.674 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:04:00.231 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:04:00.513 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:04:00.532 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:04:00.557 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:04:00.567 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:04:00.568 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:04:00.577 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:04:00.874 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:04:00.874 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:04:00.876 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:04:00.876 +07:00 [INF] Hosting environment: Development
2024-04-12 00:04:00.876 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:04:00.974 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:04:00.974 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:04:01.092 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 119.4687ms
2024-04-12 00:04:01.092 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 119.8932ms
2024-04-12 00:04:01.141 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:04:01.147 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:04:01.156 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 14.7603ms
2024-04-12 00:04:01.156 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 8.7652ms
2024-04-12 00:04:01.228 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:04:01.231 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 00:04:01.237 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 9.5614ms
2024-04-12 00:04:01.237 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 5.9867ms
2024-04-12 00:04:01.239 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 00:04:01.239 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:04:01.297 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 00:04:01.299 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 1.1608ms
2024-04-12 00:04:01.299 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 00:04:06.424 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:04:06.433 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:04:06.436 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-04-12 00:04:06.445 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 500 null text/plain; charset=utf-8 21.2719ms
2024-04-12 00:05:01.729 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 134
2024-04-12 00:05:01.731 +07:00 [INF] CORS policy execution failed.
2024-04-12 00:05:01.732 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 00:05:01.733 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:05:02.065 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 00:05:02.324 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 00:05:02.353 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 00:05:02.365 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 00:05:02.367 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:05:02.372 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 643.322ms
2024-04-12 00:05:07.192 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:05:07.195 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:05:07.196 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-04-12 00:05:07.198 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 500 null text/plain; charset=utf-8 6.6538ms
2024-04-12 00:05:38.933 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:05:39.507 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:05:39.816 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:05:39.836 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:05:39.860 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:05:39.873 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:05:39.875 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:05:39.887 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:05:41.699 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:05:42.228 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:05:42.494 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:05:42.511 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:05:42.533 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:05:42.545 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:05:42.546 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:05:42.553 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:05:42.806 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:05:42.806 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:05:42.809 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:05:42.810 +07:00 [INF] Hosting environment: Development
2024-04-12 00:05:42.810 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:05:42.920 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:05:42.920 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:05:43.027 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 107.7867ms
2024-04-12 00:05:43.027 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 110.0212ms
2024-04-12 00:05:43.080 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:05:43.094 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 14.056ms
2024-04-12 00:05:43.097 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:05:43.102 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 4.8233ms
2024-04-12 00:05:43.158 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:05:43.164 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 5.549ms
2024-04-12 00:05:43.166 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:05:43.177 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 00:05:43.178 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 1.2394ms
2024-04-12 00:05:43.179 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 00:05:43.233 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 00:05:43.237 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 4.456ms
2024-04-12 00:05:43.237 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 00:05:53.639 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:05:53.648 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:05:53.651 +07:00 [INF] AuthenticationScheme: Identity.Bearer was challenged.
2024-04-12 00:05:53.653 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 14.0465ms
2024-04-12 00:05:58.621 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:05:58.627 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:05:58.628 +07:00 [INF] AuthenticationScheme: Identity.Bearer was challenged.
2024-04-12 00:05:58.629 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 7.2881ms
2024-04-12 00:05:59.598 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:05:59.602 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:05:59.602 +07:00 [INF] AuthenticationScheme: Identity.Bearer was challenged.
2024-04-12 00:05:59.603 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 4.2825ms
2024-04-12 00:05:59.787 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:05:59.788 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:05:59.788 +07:00 [INF] AuthenticationScheme: Identity.Bearer was challenged.
2024-04-12 00:05:59.788 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.7984ms
2024-04-12 00:05:59.956 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:05:59.957 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:05:59.958 +07:00 [INF] AuthenticationScheme: Identity.Bearer was challenged.
2024-04-12 00:05:59.958 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.4573ms
2024-04-12 00:06:00.140 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:06:00.141 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:06:00.141 +07:00 [INF] AuthenticationScheme: Identity.Bearer was challenged.
2024-04-12 00:06:00.141 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.273ms
2024-04-12 00:06:00.309 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:06:00.310 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:06:00.310 +07:00 [INF] AuthenticationScheme: Identity.Bearer was challenged.
2024-04-12 00:06:00.310 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.2546ms
2024-04-12 00:06:00.489 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:06:00.490 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:06:00.491 +07:00 [INF] AuthenticationScheme: Identity.Bearer was challenged.
2024-04-12 00:06:00.492 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 2.4207ms
2024-04-12 00:06:00.566 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:06:00.567 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:06:00.567 +07:00 [INF] AuthenticationScheme: Identity.Bearer was challenged.
2024-04-12 00:06:00.567 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 0.8289ms
2024-04-12 00:06:32.642 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 134
2024-04-12 00:06:32.644 +07:00 [INF] CORS policy execution failed.
2024-04-12 00:06:32.645 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 00:06:32.647 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:06:32.955 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 00:06:33.222 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 00:06:33.257 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 00:06:33.269 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 00:06:33.272 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:06:33.278 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 635.5947ms
2024-04-12 00:06:37.468 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:06:37.470 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:06:37.470 +07:00 [INF] AuthenticationScheme: Identity.Bearer was challenged.
2024-04-12 00:06:37.470 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.9456ms
2024-04-12 00:06:53.612 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:06:54.122 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:06:54.440 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:06:54.456 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:06:54.478 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:06:54.490 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:06:54.492 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:06:54.503 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:06:56.265 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:06:56.734 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:06:56.982 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:06:56.999 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:06:57.021 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:06:57.032 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:06:57.033 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:06:57.041 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:06:57.242 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:06:57.242 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:06:57.244 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:06:57.244 +07:00 [INF] Hosting environment: Development
2024-04-12 00:06:57.244 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:06:57.321 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:06:57.321 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:06:57.415 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 93.8805ms
2024-04-12 00:06:57.415 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 94.4882ms
2024-04-12 00:06:57.446 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:06:57.456 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 9.7938ms
2024-04-12 00:06:57.457 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:06:57.459 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 1.5875ms
2024-04-12 00:06:57.520 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:06:57.532 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 11.4793ms
2024-04-12 00:06:57.542 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:06:57.545 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 00:06:57.546 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 1.2206ms
2024-04-12 00:06:57.546 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 00:06:57.616 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 00:06:57.618 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 2.0546ms
2024-04-12 00:06:57.618 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 00:07:01.761 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:07:01.767 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:07:01.775 +07:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2024-04-12 00:07:01.776 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 302 0 null 15.6034ms
2024-04-12 00:07:01.778 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/Account/Login?ReturnUrl=%2Fapi%2FActivity%2Ftambah - null null
2024-04-12 00:07:01.780 +07:00 [INF] Executing endpoint 'Fallback {*path:nonfile}'
2024-04-12 00:07:01.780 +07:00 [INF] Executed endpoint 'Fallback {*path:nonfile}'
2024-04-12 00:07:01.781 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/index.html?ReturnUrl=%2Fapi%2FActivity%2Ftambah - 404 0 null 2.4455ms
2024-04-12 00:07:01.781 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/index.html, Response status code: 404
2024-04-12 00:07:12.050 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:07:12.052 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 1.9674ms
2024-04-12 00:07:12.090 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:07:12.091 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.5774ms
2024-04-12 00:07:12.143 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:07:12.144 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 1.1385ms
2024-04-12 00:07:12.145 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:07:12.148 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 00:07:12.149 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 0.7044ms
2024-04-12 00:07:12.149 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 00:07:12.215 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 00:07:12.216 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 1.2065ms
2024-04-12 00:07:12.216 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 00:07:49.862 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 134
2024-04-12 00:07:49.864 +07:00 [INF] CORS policy execution failed.
2024-04-12 00:07:49.864 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 00:07:49.865 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:07:50.136 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 00:07:50.444 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 00:07:50.485 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 00:07:50.493 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 00:07:50.497 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:07:50.502 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 639.7212ms
2024-04-12 00:07:57.390 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:07:57.393 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:07:57.394 +07:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2024-04-12 00:07:57.395 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 302 0 null 4.9327ms
2024-04-12 00:07:57.398 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/Account/Login?ReturnUrl=%2Fapi%2FActivity%2Ftambah - null null
2024-04-12 00:07:57.398 +07:00 [INF] Executing endpoint 'Fallback {*path:nonfile}'
2024-04-12 00:07:57.399 +07:00 [INF] Executed endpoint 'Fallback {*path:nonfile}'
2024-04-12 00:07:57.399 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/index.html?ReturnUrl=%2Fapi%2FActivity%2Ftambah - 404 0 null 1.6678ms
2024-04-12 00:07:57.399 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/index.html, Response status code: 404
2024-04-12 00:08:23.957 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 00:08:23.957 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 00:08:24.217 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 00:08:24.229 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 00:08:24.229 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 272.1926ms
2024-04-12 00:08:55.061 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:08:55.574 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:08:55.866 +07:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:08:55.882 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:08:55.906 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:08:55.920 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:08:55.922 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:08:55.929 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:08:57.911 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:08:58.401 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:08:58.669 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:08:58.688 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:08:58.715 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:08:58.730 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:08:58.732 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:08:58.739 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:08:58.956 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:08:58.956 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:08:58.958 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:08:58.959 +07:00 [INF] Hosting environment: Development
2024-04-12 00:08:58.959 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:08:59.042 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:08:59.042 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:08:59.137 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 97.4532ms
2024-04-12 00:08:59.137 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 97.0618ms
2024-04-12 00:08:59.186 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:08:59.196 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:08:59.198 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 12.8425ms
2024-04-12 00:08:59.198 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 2.2711ms
2024-04-12 00:08:59.247 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:08:59.253 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 6.1443ms
2024-04-12 00:08:59.256 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:08:59.314 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 00:08:59.320 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 4.9459ms
2024-04-12 00:08:59.333 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 00:08:59.336 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 00:08:59.338 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 1.4091ms
2024-04-12 00:08:59.338 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 00:09:12.103 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:09:12.109 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:09:12.112 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-04-12 00:09:12.132 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 500 null text/plain; charset=utf-8 29.5408ms
2024-04-12 00:09:43.410 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:09:43.914 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:09:44.216 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:09:44.233 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:09:44.253 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:09:44.263 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:09:44.264 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:09:44.271 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:09:45.907 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:09:46.446 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:09:46.691 +07:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:09:46.709 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:09:46.729 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:09:46.743 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:09:46.744 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:09:46.753 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:09:46.970 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:09:46.970 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:09:46.972 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:09:46.972 +07:00 [INF] Hosting environment: Development
2024-04-12 00:09:46.972 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:09:47.051 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:09:47.051 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:09:47.156 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 107.1435ms
2024-04-12 00:09:47.156 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 107.4279ms
2024-04-12 00:09:47.187 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:09:47.194 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 7.5983ms
2024-04-12 00:09:47.209 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:09:47.211 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 1.7067ms
2024-04-12 00:09:47.372 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:09:47.380 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 7.6597ms
2024-04-12 00:09:47.382 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 00:09:47.383 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:09:47.384 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 2.479ms
2024-04-12 00:09:47.385 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 00:09:47.468 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 00:09:47.470 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 1.2226ms
2024-04-12 00:09:47.470 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 00:11:25.341 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:11:25.771 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:11:26.159 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:26.176 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:11:26.197 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:26.208 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:26.210 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:11:26.221 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:11:32.122 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:11:32.750 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:11:33.016 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:33.030 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:11:33.052 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:33.067 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:33.069 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:11:33.075 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:11:38.737 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:11:39.412 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:11:39.760 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:39.781 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:11:39.803 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:39.815 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:39.816 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:11:39.826 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:11:41.587 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:11:42.105 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:11:42.371 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:42.387 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:11:42.408 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:42.423 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:42.424 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:11:42.432 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:11:42.679 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:11:42.679 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:11:42.680 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:11:42.680 +07:00 [INF] Hosting environment: Development
2024-04-12 00:11:42.680 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:11:42.745 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:11:42.795 +07:00 [INF] Cookies was not authenticated. Failure message: Unprotect ticket failed
2024-04-12 00:11:42.840 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 95.718ms
2024-04-12 00:11:42.884 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:11:42.893 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 8.455ms
2024-04-12 00:11:52.840 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:11:53.326 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:11:58.276 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:11:58.777 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:11:59.049 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:59.065 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:11:59.085 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:59.097 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:11:59.099 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:11:59.105 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:12:00.580 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:12:00.999 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:12:01.254 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:12:01.270 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:12:01.293 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:12:01.307 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:12:01.308 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:12:01.315 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:12:01.515 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:12:01.515 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:12:01.517 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:12:01.517 +07:00 [INF] Hosting environment: Development
2024-04-12 00:12:01.517 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:12:01.596 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:12:01.707 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 110.4665ms
2024-04-12 00:12:01.733 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:12:01.745 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 11.5785ms
2024-04-12 00:15:18.613 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:15:19.111 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:15:19.389 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:15:19.406 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:15:19.429 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:15:19.442 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:15:19.444 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:15:19.451 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:15:21.143 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:15:21.647 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:15:21.915 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:15:21.937 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:15:21.964 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:15:21.984 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:15:21.986 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:15:21.997 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:15:22.238 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:15:22.238 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:15:22.240 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:15:22.240 +07:00 [INF] Hosting environment: Development
2024-04-12 00:15:22.240 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:15:22.309 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:15:22.410 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 102.3732ms
2024-04-12 00:15:22.474 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:15:22.485 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 11.645ms
2024-04-12 00:16:22.696 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:16:23.126 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:16:23.402 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:16:23.418 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:16:23.441 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:16:23.454 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:16:23.456 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:16:23.464 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:16:25.200 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:16:25.637 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:16:25.905 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:16:25.921 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:16:25.948 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:16:25.965 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:16:25.967 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:16:25.980 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:16:26.179 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:16:26.179 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:16:26.180 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:16:26.181 +07:00 [INF] Hosting environment: Development
2024-04-12 00:16:26.181 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:16:26.246 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:16:26.339 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 93.6263ms
2024-04-12 00:16:26.364 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:16:26.373 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 8.5433ms
2024-04-12 00:16:30.014 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:16:30.017 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 2.7524ms
2024-04-12 00:16:30.065 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:16:30.065 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.905ms
2024-04-12 00:16:30.114 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:16:30.117 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 2.6763ms
2024-04-12 00:16:30.120 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:16:30.139 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 00:16:30.141 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 1.4387ms
2024-04-12 00:16:30.142 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 00:16:30.205 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 00:16:30.206 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 1.1379ms
2024-04-12 00:16:30.206 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 00:16:43.945 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:16:43.951 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:16:43.955 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-04-12 00:16:43.972 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 500 null text/plain; charset=utf-8 26.7946ms
2024-04-12 00:19:08.008 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:19:08.593 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:19:08.882 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:19:08.906 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:19:08.926 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:19:08.939 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:19:08.941 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:19:08.949 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:19:10.803 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 00:19:11.336 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 00:19:11.667 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:19:11.687 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:19:11.716 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:19:11.731 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 00:19:11.732 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 00:19:11.744 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 00:19:11.987 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 00:19:11.987 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 00:19:11.989 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 00:19:11.989 +07:00 [INF] Hosting environment: Development
2024-04-12 00:19:11.989 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Web
2024-04-12 00:19:12.072 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:19:12.170 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 99.1983ms
2024-04-12 00:19:12.175 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 00:19:12.178 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 3.4972ms
2024-04-12 00:19:12.232 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:19:12.246 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 00:19:12.248 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 16.5636ms
2024-04-12 00:19:12.248 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 2.4799ms
2024-04-12 00:19:12.319 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 00:19:12.324 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 00:19:12.325 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 5.8309ms
2024-04-12 00:19:12.325 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 1.2406ms
2024-04-12 00:19:12.326 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 00:19:12.326 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 00:19:12.430 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 00:19:12.432 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 1.7766ms
2024-04-12 00:19:12.433 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 00:19:34.573 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 134
2024-04-12 00:19:34.581 +07:00 [INF] CORS policy execution failed.
2024-04-12 00:19:34.582 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 00:19:34.587 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:19:34.885 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 00:19:35.166 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 00:19:35.209 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 00:19:35.228 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 00:19:35.232 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 00:19:35.240 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 666.5133ms
2024-04-12 00:19:45.183 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:45.192 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:45.197 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:45.197 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 14.7062ms
2024-04-12 00:19:52.814 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:52.817 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:52.818 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:52.818 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 4.0128ms
2024-04-12 00:19:53.420 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:53.423 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:53.423 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:53.423 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 3.2935ms
2024-04-12 00:19:53.598 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:53.599 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:53.599 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:53.599 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.2596ms
2024-04-12 00:19:53.760 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:53.762 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:53.762 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:53.762 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.6944ms
2024-04-12 00:19:53.910 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:53.911 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:53.911 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:53.912 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.6269ms
2024-04-12 00:19:54.104 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:54.105 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:54.105 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:54.105 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 0.8389ms
2024-04-12 00:19:54.264 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:54.265 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:54.265 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:54.265 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.4949ms
2024-04-12 00:19:54.454 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:54.455 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:54.455 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:54.455 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 0.7748ms
2024-04-12 00:19:54.621 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:54.622 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:54.622 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:54.622 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 0.9162ms
2024-04-12 00:19:54.810 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:54.811 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:54.811 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:54.811 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 0.8752ms
2024-04-12 00:19:54.985 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:54.986 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:54.986 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:54.986 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.1018ms
2024-04-12 00:19:55.154 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:55.155 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:55.155 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:55.155 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.2808ms
2024-04-12 00:19:55.288 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:55.289 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:55.289 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:55.290 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.4176ms
2024-04-12 00:19:55.499 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 00:19:55.499 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 00:19:55.500 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 00:19:55.500 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 1.0368ms
2024-04-12 15:34:55.453 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:34:56.214 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:34:56.692 +07:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:34:56.715 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:34:56.738 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:34:56.752 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:34:56.754 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:34:56.765 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:35:05.128 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:35:05.716 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:35:06.148 +07:00 [INF] Executed DbCommand (78ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:35:06.175 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:35:06.201 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:35:06.214 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:35:06.216 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:35:06.227 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:35:06.736 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:35:06.736 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:35:06.737 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:35:06.737 +07:00 [INF] Hosting environment: Development
2024-04-12 15:35:06.737 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:35:07.848 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/ - null null
2024-04-12 15:35:07.903 +07:00 [INF] Executing endpoint '/'
2024-04-12 15:35:07.904 +07:00 [INF] Executing RedirectResult, redirecting to /api.
2024-04-12 15:35:07.905 +07:00 [INF] Executed endpoint '/'
2024-04-12 15:35:07.906 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/ - 302 0 null 59.6094ms
2024-04-12 15:35:08.773 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api - null null
2024-04-12 15:35:08.781 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api - 302 0 null 7.5012ms
2024-04-12 15:35:08.788 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:35:08.937 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 149.194ms
2024-04-12 15:35:08.957 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:35:08.967 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 10.1713ms
2024-04-12 15:35:09.233 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/specification.json - null null
2024-04-12 15:35:09.239 +07:00 [INF] The file /api/specification.json was not modified
2024-04-12 15:35:09.240 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/specification.json - 304 null application/json 6.9422ms
2024-04-12 15:36:05.865 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:36:06.507 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:36:06.868 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:36:06.884 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:36:06.902 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:36:06.912 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:36:06.913 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:36:06.923 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:36:08.792 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:36:09.321 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:36:09.591 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:36:09.607 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:36:09.627 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:36:09.641 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:36:09.642 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:36:09.648 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:36:09.903 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:36:09.904 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:36:09.905 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:36:09.905 +07:00 [INF] Hosting environment: Development
2024-04-12 15:36:09.906 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:36:09.972 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:36:10.067 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 96.3245ms
2024-04-12 15:36:10.100 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:36:10.108 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 8.4799ms
2024-04-12 15:36:19.772 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:36:19.778 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 5.5521ms
2024-04-12 15:36:19.803 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:36:19.804 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.7694ms
2024-04-12 15:36:49.884 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 15:36:49.886 +07:00 [INF] CORS policy execution failed.
2024-04-12 15:36:49.887 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 15:36:49.892 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:36:50.156 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 15:36:50.382 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 15:36:50.412 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 15:36:50.420 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:36:50.423 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No sign-in authentication handlers are registered. Did you forget to call AddAuthentication().AddCookie("Identity.Application",...)?
   at Microsoft.AspNetCore.Authentication.AuthenticationService.SignInAsync(HttpContext context, String scheme, ClaimsPrincipal principal, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(TUser user, AuthenticationProperties authenticationProperties, IEnumerable`1 additionalClaims)
   at Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(TUser user, Boolean isPersistent, String loginProvider, Boolean bypassTwoFactor)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(TUser user, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(String userName, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions.<>c__1`1.<<MapIdentityApi>b__1_1>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapPost1>g__RequestHandler|4>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 15:36:50.513 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 500 null text/plain 629.537ms
2024-04-12 15:37:36.480 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/ - null null
2024-04-12 15:37:36.481 +07:00 [INF] Executing endpoint '/'
2024-04-12 15:37:36.483 +07:00 [INF] Executing RedirectResult, redirecting to /api.
2024-04-12 15:37:36.483 +07:00 [INF] Executed endpoint '/'
2024-04-12 15:37:36.484 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/ - 302 0 null 3.2521ms
2024-04-12 15:37:36.489 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api - null null
2024-04-12 15:37:36.490 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api - 302 0 null 0.8156ms
2024-04-12 15:37:36.505 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:37:36.512 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 6.2647ms
2024-04-12 15:37:36.580 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:37:36.581 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.9752ms
2024-04-12 15:37:36.697 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/specification.json - null null
2024-04-12 15:37:36.703 +07:00 [INF] The file /api/specification.json was not modified
2024-04-12 15:37:36.704 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/specification.json - 304 null application/json 6.5139ms
2024-04-12 15:38:05.108 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 15:38:05.110 +07:00 [INF] CORS policy execution failed.
2024-04-12 15:38:05.110 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 15:38:05.110 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:38:05.168 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 15:38:05.240 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 15:38:05.244 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 15:38:05.246 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:38:05.246 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No sign-in authentication handlers are registered. Did you forget to call AddAuthentication().AddCookie("Identity.Application",...)?
   at Microsoft.AspNetCore.Authentication.AuthenticationService.SignInAsync(HttpContext context, String scheme, ClaimsPrincipal principal, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(TUser user, AuthenticationProperties authenticationProperties, IEnumerable`1 additionalClaims)
   at Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(TUser user, Boolean isPersistent, String loginProvider, Boolean bypassTwoFactor)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(TUser user, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(String userName, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions.<>c__1`1.<<MapIdentityApi>b__1_1>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>F69328E0708B4B584C5AACA22FE2C51A1CF192D6622828F613FC57C583CA77B63__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapPost1>g__RequestHandler|4>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 15:38:05.248 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 500 null text/plain 139.7375ms
2024-04-12 15:38:48.187 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:38:48.755 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:38:49.053 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:38:49.068 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:38:49.090 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:38:49.101 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:38:49.102 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:38:49.109 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:38:50.691 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:38:51.153 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:38:51.419 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:38:51.436 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:38:51.459 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:38:51.474 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:38:51.475 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:38:51.483 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:38:51.682 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:38:51.682 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:38:51.684 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:38:51.684 +07:00 [INF] Hosting environment: Development
2024-04-12 15:38:51.684 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:38:51.761 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:38:51.878 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 117.8087ms
2024-04-12 15:38:51.915 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:38:51.926 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 11.2216ms
2024-04-12 15:39:16.824 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 15:39:16.828 +07:00 [INF] CORS policy execution failed.
2024-04-12 15:39:16.828 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 15:39:16.831 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:39:17.020 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 15:39:17.187 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 15:39:17.208 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 15:39:17.225 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 15:39:17.227 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:39:17.231 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 406.8651ms
2024-04-12 15:39:27.091 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 15:39:27.106 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 15:39:27.109 +07:00 [INF] AuthenticationScheme: Cookies was challenged.
2024-04-12 15:39:27.110 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 19.0855ms
2024-04-12 15:40:00.009 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 15:40:00.013 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 15:40:00.301 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 15:40:00.308 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 15:40:00.308 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 298.812ms
2024-04-12 15:40:41.384 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:40:42.013 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:40:42.316 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:40:42.335 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:40:42.356 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:40:42.371 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:40:42.373 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:40:42.384 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:40:44.103 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:40:44.573 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:40:44.862 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:40:44.881 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:40:44.904 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:40:44.919 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:40:44.920 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:40:44.928 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:40:45.118 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:40:45.118 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:40:45.120 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:40:45.120 +07:00 [INF] Hosting environment: Development
2024-04-12 15:40:45.120 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:40:45.182 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:40:45.262 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 81.2147ms
2024-04-12 15:40:45.302 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:40:45.311 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 9.0042ms
2024-04-12 15:40:57.228 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:40:57.811 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:40:58.139 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:40:58.157 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:40:58.178 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:40:58.191 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:40:58.192 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:40:58.203 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:40:59.965 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:41:00.476 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:41:00.738 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:41:00.760 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:41:00.785 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:41:00.795 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:41:00.796 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:41:00.804 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:41:01.014 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:41:01.014 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:41:01.015 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:41:01.016 +07:00 [INF] Hosting environment: Development
2024-04-12 15:41:01.016 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:41:01.123 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:41:01.205 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 82.9193ms
2024-04-12 15:41:01.237 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:41:01.244 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 6.9494ms
2024-04-12 15:41:27.625 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 15:41:27.629 +07:00 [INF] CORS policy execution failed.
2024-04-12 15:41:27.630 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 15:41:27.632 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:41:27.913 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 15:41:28.107 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 15:41:28.125 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 15:41:28.133 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 15:41:28.135 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:41:28.139 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 514.8068ms
2024-04-12 15:41:38.228 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 15:41:38.236 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 15:41:38.240 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-04-12 15:41:38.254 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 500 null text/plain; charset=utf-8 25.4962ms
2024-04-12 15:42:03.748 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:42:04.465 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:42:04.785 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:42:04.807 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:42:04.827 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:42:04.842 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:42:04.845 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:42:04.856 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:42:19.427 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:42:19.910 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:42:20.149 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:42:20.163 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:42:20.185 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:42:20.202 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:42:20.204 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:42:20.211 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:42:21.690 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:42:22.128 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:42:22.381 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:42:22.397 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:42:22.421 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:42:22.434 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:42:22.435 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:42:22.442 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:42:22.640 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:42:22.641 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:42:22.642 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:42:22.643 +07:00 [INF] Hosting environment: Development
2024-04-12 15:42:22.643 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:42:22.727 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:42:22.842 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 117.5425ms
2024-04-12 15:42:22.884 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:42:22.894 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 9.7738ms
2024-04-12 15:43:00.332 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 15:43:00.338 +07:00 [INF] CORS policy execution failed.
2024-04-12 15:43:00.338 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 15:43:00.342 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:43:00.540 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 15:43:00.705 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 15:43:00.723 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 15:43:00.732 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 15:43:00.733 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:43:00.737 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 404.8316ms
2024-04-12 15:43:08.346 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 15:43:08.357 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 15:43:08.361 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-04-12 15:43:08.373 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 500 null text/plain; charset=utf-8 26.7572ms
2024-04-12 15:43:27.899 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:43:28.350 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:43:28.683 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:43:28.705 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:43:28.726 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:43:28.736 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:43:28.737 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:43:28.748 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:43:30.302 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:43:30.839 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:43:31.094 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:43:31.109 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:43:31.128 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:43:31.140 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:43:31.142 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:43:31.148 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:43:31.334 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:43:31.334 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:43:31.336 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:43:31.336 +07:00 [INF] Hosting environment: Development
2024-04-12 15:43:31.336 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:43:31.411 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:43:31.501 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 91.5606ms
2024-04-12 15:43:31.543 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:43:31.552 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 9.117ms
2024-04-12 15:43:57.150 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:43:57.635 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:43:57.904 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:43:57.918 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:43:57.940 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:43:57.955 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:43:57.956 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:43:57.963 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:43:59.410 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:43:59.870 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:44:00.121 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:44:00.137 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:44:00.159 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:44:00.171 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:44:00.172 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:44:00.179 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:44:00.369 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:44:00.369 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:44:00.370 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:44:00.371 +07:00 [INF] Hosting environment: Development
2024-04-12 15:44:00.371 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:44:00.435 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:44:00.523 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 88.736ms
2024-04-12 15:44:00.556 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:44:00.565 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 9.3103ms
2024-04-12 15:44:23.114 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 15:44:23.118 +07:00 [INF] CORS policy execution failed.
2024-04-12 15:44:23.119 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 15:44:23.121 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:44:23.376 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 15:44:23.590 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 15:44:23.614 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 15:44:23.622 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 15:44:23.625 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:44:23.630 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 516.6934ms
2024-04-12 15:44:32.130 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 15:44:32.140 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 15:44:32.145 +07:00 [INF] AuthenticationScheme: Identity.Bearer was challenged.
2024-04-12 15:44:32.146 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 15.9653ms
2024-04-12 15:46:38.477 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:46:38.980 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:46:39.277 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:46:39.297 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:46:39.321 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:46:39.333 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:46:39.335 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:46:39.345 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:46:39.581 +07:00 [FTL] Application startup exception
System.InvalidOperationException: Scheme already exists: Identity.Bearer
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
2024-04-12 15:46:39.593 +07:00 [ERR] Hosting failed to start
System.InvalidOperationException: Scheme already exists: Identity.Bearer
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2024-04-12 15:51:56.045 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:51:56.642 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:51:56.978 +07:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:51:56.994 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:51:57.015 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:51:57.029 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:51:57.030 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:51:57.039 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:52:02.729 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:52:03.289 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:52:03.642 +07:00 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:52:03.660 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:52:03.682 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:52:03.694 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:52:03.696 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:52:03.707 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:52:04.205 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:52:04.205 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:52:04.206 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:52:04.207 +07:00 [INF] Hosting environment: Development
2024-04-12 15:52:04.207 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:52:05.604 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/ - null null
2024-04-12 15:52:05.709 +07:00 [INF] Executing endpoint '/'
2024-04-12 15:52:05.711 +07:00 [INF] Executing RedirectResult, redirecting to /api.
2024-04-12 15:52:05.712 +07:00 [INF] Executed endpoint '/'
2024-04-12 15:52:05.722 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/ - 302 0 null 118.8627ms
2024-04-12 15:52:05.811 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api - null null
2024-04-12 15:52:05.824 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api - 302 0 null 12.3011ms
2024-04-12 15:52:05.828 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:52:06.012 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 184.0646ms
2024-04-12 15:52:06.037 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:52:06.048 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 11.2162ms
2024-04-12 15:52:12.826 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:52:12.829 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 3.0964ms
2024-04-12 15:52:12.863 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:52:12.864 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.9937ms
2024-04-12 15:52:52.524 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 15:52:52.526 +07:00 [INF] CORS policy execution failed.
2024-04-12 15:52:52.526 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 15:52:52.527 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:52:52.767 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 15:52:52.973 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 15:52:52.994 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 15:52:53.000 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 15:52:53.005 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:52:53.009 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 null application/json; charset=utf-8 485.3352ms
2024-04-12 15:53:15.435 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:53:15.436 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 1.2423ms
2024-04-12 15:53:15.492 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:53:15.493 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.6054ms
2024-04-12 15:53:41.234 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 15:53:41.236 +07:00 [INF] CORS policy execution failed.
2024-04-12 15:53:41.236 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 15:53:41.236 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:53:41.290 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 15:53:41.361 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 15:53:41.365 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 15:53:41.365 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 15:53:41.366 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:53:41.366 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 null application/json; charset=utf-8 131.8082ms
2024-04-12 15:54:06.796 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:54:07.340 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:54:25.947 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:54:26.408 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:54:26.744 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:54:26.761 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:54:26.780 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:54:26.790 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:54:26.792 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:54:26.799 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:54:28.332 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:54:28.850 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:54:29.111 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:54:29.127 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:54:29.147 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:54:29.161 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:54:29.162 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:54:29.170 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:54:29.383 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:54:29.383 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:54:29.385 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:54:29.385 +07:00 [INF] Hosting environment: Development
2024-04-12 15:54:29.385 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:54:29.467 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:54:29.467 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:54:29.572 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 107.3562ms
2024-04-12 15:54:29.572 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 107.6248ms
2024-04-12 15:54:29.624 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:54:29.637 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 12.7966ms
2024-04-12 15:54:29.637 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:54:29.639 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 1.655ms
2024-04-12 15:54:34.805 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:54:34.811 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 5.4344ms
2024-04-12 15:54:34.847 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:54:34.847 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.4269ms
2024-04-12 15:54:56.601 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login - application/json 121
2024-04-12 15:54:56.604 +07:00 [INF] CORS policy execution failed.
2024-04-12 15:54:56.605 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 15:54:56.607 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:54:56.836 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 15:54:57.021 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 15:54:57.046 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 15:54:57.053 +07:00 [INF] AuthenticationScheme: Identity.Bearer signed in.
2024-04-12 15:54:57.055 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:54:57.060 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login - 200 0 null 458.859ms
2024-04-12 15:55:07.711 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 15:55:07.721 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 15:55:07.723 +07:00 [INF] AuthenticationScheme: Identity.External was challenged.
2024-04-12 15:55:07.723 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 11.588ms
2024-04-12 15:55:33.712 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:55:34.334 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:55:34.755 +07:00 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:55:34.778 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:55:34.802 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:55:34.848 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:55:34.850 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:55:34.873 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:55:35.156 +07:00 [FTL] Application startup exception
System.InvalidOperationException: Scheme already exists: Identity.External
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
2024-04-12 15:55:35.164 +07:00 [ERR] Hosting failed to start
System.InvalidOperationException: Scheme already exists: Identity.External
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2024-04-12 15:55:51.010 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:55:51.661 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:55:51.940 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:55:51.956 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:55:51.978 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:55:51.990 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:55:51.991 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:55:51.999 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:55:52.211 +07:00 [FTL] Application startup exception
System.InvalidOperationException: Scheme already exists: Identity.External
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
2024-04-12 15:55:52.219 +07:00 [ERR] Hosting failed to start
System.InvalidOperationException: Scheme already exists: Identity.External
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2024-04-12 15:56:47.357 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:56:47.860 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:56:48.162 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:56:48.180 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:56:48.201 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:56:48.211 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:56:48.212 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:56:48.223 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:56:49.891 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:56:50.409 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:56:50.688 +07:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:56:50.707 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:56:50.730 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:56:50.745 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:56:50.747 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:56:50.757 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:56:50.988 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:56:50.988 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:56:50.989 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:56:50.990 +07:00 [INF] Hosting environment: Development
2024-04-12 15:56:50.990 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:56:51.229 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/ - null null
2024-04-12 15:56:51.310 +07:00 [INF] Executing endpoint '/'
2024-04-12 15:56:51.311 +07:00 [INF] Executing RedirectResult, redirecting to /api.
2024-04-12 15:56:51.311 +07:00 [INF] Executed endpoint '/'
2024-04-12 15:56:51.313 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/ - 302 0 null 85.0163ms
2024-04-12 15:56:51.325 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api - null null
2024-04-12 15:56:51.332 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api - 302 0 null 6.7555ms
2024-04-12 15:56:51.339 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:56:51.398 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 58.9541ms
2024-04-12 15:56:51.421 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:56:51.439 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 17.8284ms
2024-04-12 15:56:56.432 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:56:56.436 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 3.9025ms
2024-04-12 15:56:56.479 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:56:56.480 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.5354ms
2024-04-12 15:57:40.820 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 15:57:40.821 +07:00 [INF] CORS policy execution failed.
2024-04-12 15:57:40.822 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 15:57:40.822 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:57:41.065 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 15:57:41.259 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 15:57:41.284 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 15:57:41.294 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 15:57:41.296 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 15:57:41.301 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 481.4768ms
2024-04-12 15:57:51.189 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 15:57:51.199 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 15:57:51.201 +07:00 [INF] AuthenticationScheme: Identity.External was challenged.
2024-04-12 15:57:51.202 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 401 0 null 12.959ms
2024-04-12 15:58:06.738 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:58:07.290 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:58:07.574 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:07.589 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:07.609 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:07.623 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:07.624 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:07.635 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:58:13.433 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:58:13.860 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:58:14.155 +07:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:14.177 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:14.196 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:14.206 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:14.207 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:14.218 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:58:14.394 +07:00 [FTL] Application startup exception
System.InvalidOperationException: Scheme already exists: Identity.External
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
2024-04-12 15:58:14.402 +07:00 [ERR] Hosting failed to start
System.InvalidOperationException: Scheme already exists: Identity.External
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2024-04-12 15:58:29.899 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:58:30.492 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:58:30.789 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:30.810 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:30.834 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:30.845 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:30.847 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:30.856 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:58:32.560 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:58:33.105 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:58:33.420 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:33.439 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:33.464 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:33.480 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:33.482 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:33.491 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:58:33.733 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:58:33.733 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:58:33.735 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:58:33.735 +07:00 [INF] Hosting environment: Development
2024-04-12 15:58:33.735 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:58:33.835 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:58:33.835 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:58:33.949 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 114.2265ms
2024-04-12 15:58:33.949 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 113.561ms
2024-04-12 15:58:33.984 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:58:33.993 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 9.1345ms
2024-04-12 15:58:33.997 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:58:33.998 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.9689ms
2024-04-12 15:58:45.978 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:58:46.546 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:58:46.819 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:46.834 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:46.855 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:46.868 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:46.871 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:46.877 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:58:48.556 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:58:49.059 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:58:49.336 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:49.356 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:49.380 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:49.396 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:58:49.398 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:58:49.409 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:58:49.624 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:58:49.624 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:58:49.626 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:58:49.626 +07:00 [INF] Hosting environment: Development
2024-04-12 15:58:49.627 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:58:49.707 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:58:49.707 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:58:49.820 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 113.0584ms
2024-04-12 15:58:49.820 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 113.5775ms
2024-04-12 15:58:49.848 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:58:49.861 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:58:49.864 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 15.6723ms
2024-04-12 15:58:49.864 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 2.7218ms
2024-04-12 15:59:03.613 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:59:04.165 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:59:04.469 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:04.487 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:59:04.506 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:04.517 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:04.518 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:59:04.528 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:59:06.410 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:59:06.930 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:59:07.191 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:07.207 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:59:07.230 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:07.245 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:07.247 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:59:07.258 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:59:07.475 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:59:07.475 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:59:07.477 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:59:07.478 +07:00 [INF] Hosting environment: Development
2024-04-12 15:59:07.478 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:59:07.556 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:59:07.556 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:59:07.650 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 95.6545ms
2024-04-12 15:59:07.650 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 95.3676ms
2024-04-12 15:59:07.681 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:59:07.692 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:59:07.698 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 5.5754ms
2024-04-12 15:59:07.698 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 16.1805ms
2024-04-12 15:59:25.340 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:59:25.878 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:59:26.163 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:26.179 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:59:26.202 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:26.215 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:26.217 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:59:26.227 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:59:27.962 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:59:28.458 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:59:28.747 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:28.766 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:59:28.791 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:28.805 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:28.806 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:59:28.814 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:59:29.036 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 15:59:29.036 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 15:59:29.038 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 15:59:29.038 +07:00 [INF] Hosting environment: Development
2024-04-12 15:59:29.039 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 15:59:29.122 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:59:29.122 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 15:59:29.229 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 108.6255ms
2024-04-12 15:59:29.229 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 108.9956ms
2024-04-12 15:59:29.263 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:59:29.276 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 15:59:29.281 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 4.8659ms
2024-04-12 15:59:29.281 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 18.0516ms
2024-04-12 15:59:38.321 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 15:59:38.893 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 15:59:39.200 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:39.217 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:59:39.242 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:39.255 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 15:59:39.256 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 15:59:39.265 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 15:59:39.456 +07:00 [FTL] Application startup exception
System.InvalidOperationException: Scheme already exists: Identity.Bearer
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
2024-04-12 15:59:39.467 +07:00 [ERR] Hosting failed to start
System.InvalidOperationException: Scheme already exists: Identity.Bearer
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2024-04-12 16:01:49.978 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:01:50.499 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:01:50.789 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:01:50.804 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:01:50.827 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:01:50.840 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:01:50.841 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:01:50.849 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:01:52.406 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:01:53.051 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:01:53.362 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:01:53.380 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:01:53.403 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:01:53.416 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:01:53.418 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:01:53.428 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:01:53.641 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 16:01:53.641 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 16:01:53.643 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 16:01:53.643 +07:00 [INF] Hosting environment: Development
2024-04-12 16:01:53.643 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 16:01:53.750 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:01:53.750 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:01:53.848 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 101.115ms
2024-04-12 16:01:53.848 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 100.4333ms
2024-04-12 16:01:53.886 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:01:53.886 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:01:53.895 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 9.0952ms
2024-04-12 16:01:53.895 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 9.0953ms
2024-04-12 16:02:10.506 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:02:10.922 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:02:11.180 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:11.200 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:02:11.221 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:11.235 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:11.237 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:02:11.244 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:02:12.984 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:02:17.505 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:02:17.998 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:02:18.319 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:18.341 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:02:18.358 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:18.369 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:18.370 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:02:18.378 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:02:23.184 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:02:23.683 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:02:23.945 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:23.964 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:02:23.988 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:23.999 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:24.000 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:02:24.010 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:02:28.967 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:02:29.439 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:02:29.767 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:29.783 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:02:29.806 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:29.819 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:29.820 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:02:29.829 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:02:31.396 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:02:31.799 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:02:32.060 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:32.076 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:02:32.098 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:32.113 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:02:32.114 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:02:32.122 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:02:32.384 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 16:02:32.384 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 16:02:32.385 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 16:02:32.386 +07:00 [INF] Hosting environment: Development
2024-04-12 16:02:32.386 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 16:02:32.462 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:02:32.462 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:02:32.515 +07:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2024-04-12 16:02:32.574 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 113.35ms
2024-04-12 16:02:32.574 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 113.9105ms
2024-04-12 16:02:32.607 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:02:32.607 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:02:32.614 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 7.2876ms
2024-04-12 16:02:32.614 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 7.2877ms
2024-04-12 16:02:49.911 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:02:49.918 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 6.1026ms
2024-04-12 16:02:49.954 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:02:49.954 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.6116ms
2024-04-12 16:03:11.386 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 16:03:11.389 +07:00 [INF] CORS policy execution failed.
2024-04-12 16:03:11.389 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 16:03:11.393 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:03:11.593 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:03:11.804 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:03:11.831 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:03:11.840 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:03:11.842 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:03:11.847 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 461.1021ms
2024-04-12 16:03:20.363 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 16:03:20.382 +07:00 [INF] CORS policy execution failed.
2024-04-12 16:03:20.382 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 16:03:20.383 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Activity/tambah => CreateActivity'
2024-04-12 16:03:20.493 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__GetUsername_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."UserName" = @__GetUsername_0
LIMIT 2
2024-04-12 16:03:20.717 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = DateTime), @p3='?', @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = Boolean), @p8='?' (DbType = Guid), @p9='?', @p10='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Activities" ("Id", "Category", "Date", "Description", "Title", "Venue", "isCanceled", "isPrivate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
INSERT INTO "ActivityAttendees" ("ActivityId", "AppUserId", "isHost")
VALUES (@p8, @p9, @p10);
2024-04-12 16:03:20.740 +07:00 [INF] Create Activity
2024-04-12 16:03:20.748 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Activity/tambah => CreateActivity'
2024-04-12 16:03:20.748 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 200 null application/json; charset=utf-8 385.3595ms
2024-04-12 16:03:45.546 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:03:45.548 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:03:45.681 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@___user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @___user_Id_0
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:03:45.689 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:03:45.690 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 143.5459ms
2024-04-12 16:08:05.634 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:08:05.635 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:08:05.635 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:08:05.748 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:08:05.789 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:08:05.808 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:08:05.808 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 174.2735ms
2024-04-12 16:08:31.679 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login - null null
2024-04-12 16:08:31.682 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:08:31.683 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login - 204 null null 3.9657ms
2024-04-12 16:08:31.684 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login - application/json 59
2024-04-12 16:08:31.684 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:08:31.684 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:08:31.693 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:08:31.781 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:08:31.785 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:08:31.787 +07:00 [INF] AuthenticationScheme: Identity.Bearer signed in.
2024-04-12 16:08:31.789 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:08:31.790 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login - 200 null application/json; charset=utf-8 105.6874ms
2024-04-12 16:08:31.794 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:08:31.794 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:08:31.794 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:08:31.800 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:08:31.806 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:08:31.806 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 11.898ms
2024-04-12 16:08:46.977 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login - null null
2024-04-12 16:08:46.977 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:08:46.978 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login - 204 null null 0.7353ms
2024-04-12 16:08:46.981 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login - application/json 59
2024-04-12 16:08:46.981 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:08:46.981 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:08:46.994 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:08:47.074 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:08:47.077 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:08:47.078 +07:00 [INF] AuthenticationScheme: Identity.Bearer signed in.
2024-04-12 16:08:47.078 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:08:47.078 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login - 200 null application/json; charset=utf-8 97.467ms
2024-04-12 16:08:47.081 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:08:47.082 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:08:47.082 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:08:47.087 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:08:47.088 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:08:47.088 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 7.1987ms
2024-04-12 16:10:04.331 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:10:04.333 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:10:04.333 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:10:04.345 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:10:04.355 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:10:04.359 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:10:04.359 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 27.9377ms
2024-04-12 16:10:10.186 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:10:10.188 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:10:10.188 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:10:10.208 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:10:10.216 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:10:10.224 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:10:10.224 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 38.7953ms
2024-04-12 16:10:46.763 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:10:46.763 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:10:46.763 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:10:46.767 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:10:46.771 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:10:46.776 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:10:46.776 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 13.8141ms
2024-04-12 16:11:08.319 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login - null null
2024-04-12 16:11:08.319 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:11:08.319 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login - 204 null null 0.7417ms
2024-04-12 16:11:08.322 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login - application/json 46
2024-04-12 16:11:08.323 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:11:08.323 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:11:08.326 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:11:08.414 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:11:08.417 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:11:08.418 +07:00 [INF] AuthenticationScheme: Identity.Bearer signed in.
2024-04-12 16:11:08.418 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:11:08.419 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login - 200 null application/json; charset=utf-8 96.137ms
2024-04-12 16:11:08.422 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:11:08.423 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:11:08.423 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:11:08.428 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:11:08.428 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:11:08.428 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 5.6378ms
2024-04-12 16:11:08.452 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:11:08.452 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:11:08.452 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:11:08.456 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:11:08.460 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:11:08.463 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:11:08.463 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 11.5147ms
2024-04-12 16:11:26.612 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:11:26.612 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:11:26.617 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@___user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @___user_Id_0
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:11:26.618 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:11:26.619 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 6.7072ms
2024-04-12 16:12:08.198 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:12:08.198 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:12:08.198 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:08.202 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:12:08.207 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:12:08.209 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:08.210 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 12.1192ms
2024-04-12 16:12:12.183 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:12:12.183 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:12:12.183 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:12.187 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:12:12.193 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:12:12.196 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:12.196 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 13.5499ms
2024-04-12 16:12:14.150 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:12:14.151 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:12:14.151 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:14.154 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:12:14.162 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:12:14.167 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:14.167 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 16.9741ms
2024-04-12 16:12:15.572 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:12:15.572 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:12:15.572 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:15.577 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:12:15.581 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:12:15.584 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:15.585 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 13.1088ms
2024-04-12 16:12:24.164 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:12:24.165 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:12:24.165 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:24.169 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:12:24.176 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:12:24.199 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:24.200 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 35.4385ms
2024-04-12 16:12:37.329 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login - null null
2024-04-12 16:12:37.329 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:12:37.329 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login - 204 null null 0.4549ms
2024-04-12 16:12:37.331 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login - application/json 59
2024-04-12 16:12:37.332 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:12:37.332 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:12:37.335 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:12:37.413 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:12:37.416 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:12:37.417 +07:00 [INF] AuthenticationScheme: Identity.Bearer signed in.
2024-04-12 16:12:37.417 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:12:37.417 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login - 200 null application/json; charset=utf-8 85.7957ms
2024-04-12 16:12:37.422 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:12:37.422 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:12:37.422 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:12:37.425 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:12:37.426 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:12:37.426 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 4.4028ms
2024-04-12 16:12:37.456 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:12:37.456 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:12:37.456 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:37.463 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:12:37.469 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:12:37.473 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:12:37.474 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 17.7786ms
2024-04-12 16:14:23.398 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:14:23.998 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:14:24.293 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:14:24.309 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:14:24.334 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:14:24.347 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:14:24.348 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:14:24.359 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:14:26.127 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:14:26.614 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:14:26.895 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:14:26.912 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:14:26.936 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:14:26.949 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:14:26.951 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:14:26.958 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:14:27.180 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 16:14:27.180 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 16:14:27.182 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 16:14:27.182 +07:00 [INF] Hosting environment: Development
2024-04-12 16:14:27.182 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 16:14:27.256 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:14:27.256 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:14:27.307 +07:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2024-04-12 16:14:27.356 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 101.4388ms
2024-04-12 16:14:27.356 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 101.1578ms
2024-04-12 16:14:27.387 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:14:27.397 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 9.4289ms
2024-04-12 16:14:27.412 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:14:27.413 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.8891ms
2024-04-12 16:14:29.760 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:14:29.773 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:14:29.778 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:14:30.324 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:14:30.501 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:14:30.542 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:14:30.547 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 786.7241ms
2024-04-12 16:14:42.964 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login - null null
2024-04-12 16:14:42.965 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:14:42.967 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login - 204 null null 2.7905ms
2024-04-12 16:14:42.969 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login - application/json 59
2024-04-12 16:14:42.971 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:14:42.972 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:14:43.048 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:14:43.172 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:14:43.184 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:14:43.188 +07:00 [INF] AuthenticationScheme: Identity.Bearer signed in.
2024-04-12 16:14:43.192 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:14:43.193 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login - 200 null application/json; charset=utf-8 223.2231ms
2024-04-12 16:14:43.197 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:14:43.198 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:14:43.198 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:14:43.230 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:14:43.234 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:14:43.234 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:14:43.235 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:14:43.245 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:14:43.246 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:14:43.246 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 49.2275ms
2024-04-12 16:14:43.252 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:14:43.257 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:14:43.257 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 26.9635ms
2024-04-12 16:14:54.418 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:14:54.419 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:14:54.419 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:14:54.426 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:14:54.432 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:14:54.435 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:14:54.436 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 17.467ms
2024-04-12 16:15:07.012 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:15:07.013 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:15:07.020 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@___user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @___user_Id_0
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:15:07.028 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:15:07.028 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 16.0064ms
2024-04-12 16:15:23.192 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:15:29.188 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:15:29.748 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:15:30.060 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:15:30.075 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:15:30.098 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:15:30.109 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:15:30.111 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:15:30.120 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:15:31.847 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:15:32.456 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:15:32.732 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:15:32.749 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:15:32.772 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:15:32.786 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:15:32.787 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:15:32.795 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:15:33.030 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 16:15:33.030 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 16:15:33.032 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 16:15:33.032 +07:00 [INF] Hosting environment: Development
2024-04-12 16:15:33.033 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 16:15:33.106 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:15:33.106 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:15:33.173 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:15:33.176 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:15:33.231 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 125.9307ms
2024-04-12 16:15:33.259 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:15:33.272 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 12.5774ms
2024-04-12 16:15:33.537 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:15:33.676 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:15:33.716 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:15:33.719 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 614.6653ms
2024-04-12 16:15:34.393 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:15:34.400 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:15:34.400 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:15:34.522 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:15:34.531 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:15:34.540 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:15:34.541 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 147.4929ms
2024-04-12 16:15:43.658 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:15:43.662 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 3.7156ms
2024-04-12 16:15:43.701 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:15:43.702 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.9316ms
2024-04-12 16:15:45.129 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:15:45.130 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:15:45.130 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:15:45.139 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:15:45.144 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:15:45.147 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:15:45.148 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 18.9325ms
2024-04-12 16:16:00.692 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login - null null
2024-04-12 16:16:00.693 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:16:00.694 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login - 204 null null 1.9449ms
2024-04-12 16:16:00.696 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login - application/json 59
2024-04-12 16:16:00.698 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:16:00.698 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:16:00.739 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:16:00.867 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:16:00.879 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:16:00.885 +07:00 [INF] AuthenticationScheme: Identity.Bearer signed in.
2024-04-12 16:16:00.889 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:16:00.890 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login - 200 null application/json; charset=utf-8 193.1243ms
2024-04-12 16:16:00.893 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:16:00.893 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:16:00.893 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:16:00.926 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:16:00.928 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:16:00.928 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:16:00.929 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:16:00.934 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:16:00.936 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:16:00.936 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 43.2387ms
2024-04-12 16:16:00.939 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:16:00.942 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:16:00.942 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 13.9338ms
2024-04-12 16:16:07.974 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:16:07.974 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:16:07.980 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:16:07.981 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:16:07.981 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 7.4375ms
2024-04-12 16:16:24.818 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:16:25.345 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:16:25.719 +07:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:16:25.741 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:16:25.768 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:16:25.778 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:16:25.779 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:16:25.786 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:16:27.418 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:16:27.969 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:16:28.205 +07:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:16:28.222 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:16:28.247 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:16:28.260 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:16:28.261 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:16:28.267 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:16:28.466 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 16:16:28.466 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 16:16:28.467 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 16:16:28.467 +07:00 [INF] Hosting environment: Development
2024-04-12 16:16:28.467 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 16:16:28.543 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:16:28.543 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:16:28.592 +07:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2024-04-12 16:16:28.638 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 96.2396ms
2024-04-12 16:16:28.639 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 96.9249ms
2024-04-12 16:16:28.664 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:16:28.670 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 6.0029ms
2024-04-12 16:16:28.676 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:16:28.677 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.6821ms
2024-04-12 16:22:45.970 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:22:45.978 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:22:46.283 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@___user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @___user_Id_0
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:22:46.350 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:22:46.355 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 384.6473ms
2024-04-12 16:22:48.769 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:22:48.772 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:22:48.773 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:22:48.864 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:22:48.909 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:22:48.926 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:22:48.926 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 157.8173ms
2024-04-12 16:23:03.313 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:23:03.317 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:23:03.317 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:23:03.373 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:23:03.389 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:23:03.395 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:23:03.396 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 82.7543ms
2024-04-12 16:23:05.725 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:23:05.725 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:23:05.726 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:23:05.736 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:23:05.747 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:23:05.753 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:23:05.754 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 29.3014ms
2024-04-12 16:23:43.822 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login - null null
2024-04-12 16:23:43.823 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:23:43.825 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login - 204 null null 2.5708ms
2024-04-12 16:23:43.827 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login - application/json 59
2024-04-12 16:23:43.828 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:23:43.829 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:23:43.846 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:23:43.930 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:23:43.942 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:23:43.946 +07:00 [INF] AuthenticationScheme: Identity.Bearer signed in.
2024-04-12 16:23:43.951 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:23:43.951 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login - 200 null application/json; charset=utf-8 124.3101ms
2024-04-12 16:23:43.955 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:23:43.956 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:23:43.956 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:23:43.961 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:23:43.965 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:23:43.965 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 9.9439ms
2024-04-12 16:23:43.999 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:23:44.001 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:23:44.001 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:23:44.005 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:23:44.011 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:23:44.014 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:23:44.015 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 16.1673ms
2024-04-12 16:25:35.541 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:25:35.542 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:25:35.542 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:35.550 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:25:35.556 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:25:35.562 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:35.563 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 22.4878ms
2024-04-12 16:25:36.518 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:25:36.518 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:25:36.519 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:36.524 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:25:36.530 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:25:36.535 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:36.535 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 17.131ms
2024-04-12 16:25:38.570 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:25:38.571 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:25:38.572 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:38.575 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:25:38.588 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:25:38.591 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:38.591 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 20.5554ms
2024-04-12 16:25:44.496 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:25:44.497 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:25:44.498 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:44.506 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:25:44.513 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:25:44.517 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:44.518 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 21.4779ms
2024-04-12 16:25:46.546 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:25:46.546 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:25:46.546 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:46.550 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:25:46.555 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:25:46.557 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:46.558 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 11.9057ms
2024-04-12 16:25:48.545 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:25:48.546 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:25:48.546 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:48.553 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:25:48.565 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:25:48.571 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:48.571 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 25.3369ms
2024-04-12 16:25:49.374 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:25:49.377 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:25:49.377 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:49.386 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:25:49.395 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:25:49.401 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:25:49.402 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 27.2557ms
2024-04-12 16:26:08.257 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login - null null
2024-04-12 16:26:08.257 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:26:08.257 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login - 204 null null 0.6146ms
2024-04-12 16:26:08.260 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login - application/json 59
2024-04-12 16:26:08.260 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:26:08.260 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:26:08.265 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:26:08.364 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:26:08.366 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:26:08.367 +07:00 [INF] AuthenticationScheme: Identity.Bearer signed in.
2024-04-12 16:26:08.367 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:26:08.367 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login - 200 null application/json; charset=utf-8 107.4258ms
2024-04-12 16:26:08.375 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:26:08.375 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:26:08.376 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:26:08.388 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:26:08.389 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:26:08.389 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 14.0321ms
2024-04-12 16:26:08.409 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:26:08.409 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:26:08.409 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:26:08.412 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:26:08.416 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:26:08.419 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:26:08.420 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 10.7689ms
2024-04-12 16:26:31.089 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:26:31.089 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:26:31.089 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:26:31.094 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:26:31.100 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:26:31.128 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:26:31.134 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 44.8998ms
2024-04-12 16:27:07.112 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:27:07.569 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:27:07.864 +07:00 [INF] Executed DbCommand (64ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:27:07.884 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:27:07.910 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:27:07.924 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:27:07.926 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:27:07.939 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:27:09.543 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:27:09.962 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:27:10.272 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:27:10.287 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:27:10.306 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:27:10.319 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:27:10.320 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:27:10.327 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:27:10.513 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 16:27:10.513 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 16:27:10.515 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 16:27:10.515 +07:00 [INF] Hosting environment: Development
2024-04-12 16:27:10.515 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 16:27:10.593 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:27:10.593 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:27:10.642 +07:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2024-04-12 16:27:10.687 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 94.9052ms
2024-04-12 16:27:10.687 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 94.65ms
2024-04-12 16:27:10.728 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:27:10.741 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 11.7534ms
2024-04-12 16:27:10.743 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:27:10.744 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.6214ms
2024-04-12 16:27:13.373 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:27:13.379 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:13.381 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:13.673 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:27:13.793 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:27:13.820 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:13.825 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 451.889ms
2024-04-12 16:27:16.004 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:27:16.006 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:16.006 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:16.140 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:27:16.146 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:27:16.153 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:16.154 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 149.8681ms
2024-04-12 16:27:27.491 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login - null null
2024-04-12 16:27:27.492 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:27.492 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login - 204 null null 1.4038ms
2024-04-12 16:27:27.494 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login - application/json 59
2024-04-12 16:27:27.496 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:27.496 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:27:27.537 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:27:27.723 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:27:27.738 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:27:27.742 +07:00 [INF] AuthenticationScheme: Identity.Bearer signed in.
2024-04-12 16:27:27.747 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:27:27.747 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login - 200 null application/json; charset=utf-8 252.8076ms
2024-04-12 16:27:27.754 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:27:27.754 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:27.754 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:27:27.792 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:27:27.792 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:27.793 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:27.793 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:27:27.799 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:27:27.801 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:27:27.801 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 47.7363ms
2024-04-12 16:27:27.803 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:27:27.806 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:27.806 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 14.5859ms
2024-04-12 16:27:35.769 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:27:35.770 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:35.770 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:35.778 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:27:35.788 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:27:35.797 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:35.798 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 28.6159ms
2024-04-12 16:27:40.528 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:27:40.530 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:40.530 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:40.535 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:27:40.547 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:27:40.552 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:40.553 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 24.6331ms
2024-04-12 16:27:56.299 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login - null null
2024-04-12 16:27:56.299 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:56.300 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login - 204 null null 0.7325ms
2024-04-12 16:27:56.302 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login - application/json 59
2024-04-12 16:27:56.303 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:56.303 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:27:56.307 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:27:56.398 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:27:56.401 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:27:56.402 +07:00 [INF] AuthenticationScheme: Identity.Bearer signed in.
2024-04-12 16:27:56.402 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:27:56.402 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login - 200 null application/json; charset=utf-8 99.7999ms
2024-04-12 16:27:56.406 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:27:56.406 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:56.406 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:27:56.410 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:27:56.411 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:27:56.412 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 5.8222ms
2024-04-12 16:27:56.439 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:27:56.440 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:27:56.440 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:56.443 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:27:56.446 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:27:56.450 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:27:56.450 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 10.6232ms
2024-04-12 16:28:21.480 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:28:21.480 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:28:21.481 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:28:21.485 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:28:21.522 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:28:21.526 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:28:21.526 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 46.3041ms
2024-04-12 16:28:37.490 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:28:37.491 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:28:37.491 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:28:37.496 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:28:37.504 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:28:37.507 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:28:37.507 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 17.7436ms
2024-04-12 16:28:38.581 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:28:38.581 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:28:38.582 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:28:38.589 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:28:38.597 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:28:38.598 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:28:38.599 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 17.5406ms
2024-04-12 16:28:41.502 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:28:41.502 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:28:41.502 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:28:41.506 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:28:41.519 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:28:41.521 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:28:41.521 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 19.1559ms
2024-04-12 16:28:43.070 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:28:43.071 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:28:43.071 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:28:43.081 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:28:43.087 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:28:43.089 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:28:43.089 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 19.0801ms
2024-04-12 16:29:02.747 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 16:29:02.747 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:29:02.748 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 0.8221ms
2024-04-12 16:29:02.750 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 16:29:02.751 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:29:02.751 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:29:02.763 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:29:02.829 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:29:02.832 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:29:02.835 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:29:02.835 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:29:02.835 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 84.531ms
2024-04-12 16:29:02.841 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:29:02.842 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:29:02.842 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:29:02.846 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:29:02.846 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:29:02.846 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 4.7559ms
2024-04-12 16:29:02.875 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:29:02.876 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:29:02.876 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:29:02.879 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:29:02.884 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:29:02.886 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:29:02.887 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 11.4534ms
2024-04-12 16:29:29.508 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:29:29.509 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:29:29.510 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:29:29.513 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:29:29.519 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:29:29.530 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:29:29.530 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 21.9084ms
2024-04-12 16:29:41.125 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:29:41.125 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:29:41.125 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:29:41.129 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:29:41.133 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:29:41.136 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:29:41.136 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 11.6537ms
2024-04-12 16:29:47.246 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:29:47.247 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:29:47.247 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:29:47.253 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:29:47.266 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:29:47.275 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:29:47.275 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 28.9831ms
2024-04-12 16:30:25.615 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:30:25.616 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:30:25.616 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:30:25.619 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:30:25.626 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:30:25.630 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:30:25.631 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 15.6173ms
2024-04-12 16:30:39.947 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:30:39.947 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:30:39.950 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:30:39.951 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:30:39.951 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 4.4297ms
2024-04-12 16:30:42.964 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:30:42.964 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:30:42.968 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:30:42.969 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:30:42.969 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 4.7413ms
2024-04-12 16:31:31.998 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 16:31:31.999 +07:00 [INF] CORS policy execution failed.
2024-04-12 16:31:31.999 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 16:31:31.999 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:31:32.006 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:31:32.098 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:31:32.100 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:31:32.101 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:31:32.101 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:31:32.101 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 103.0834ms
2024-04-12 16:31:36.653 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:31:36.655 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:31:36.659 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@___user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @___user_Id_0
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:31:36.666 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:31:36.667 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 13.6821ms
2024-04-12 16:31:39.036 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:31:39.037 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:31:39.037 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:31:39.040 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:31:39.044 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:31:39.047 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:31:39.049 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 12.4481ms
2024-04-12 16:31:41.773 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:31:41.774 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:31:41.774 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:31:41.777 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:31:41.783 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:31:41.785 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:31:41.785 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 11.9277ms
2024-04-12 16:31:43.801 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:31:43.801 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:31:43.802 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:31:43.838 +07:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:31:43.856 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:31:43.858 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:31:43.858 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 57.7691ms
2024-04-12 16:31:45.420 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:31:45.420 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:31:45.421 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:31:45.424 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:31:45.452 +07:00 [INF] Executed DbCommand (27ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:31:45.456 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:31:45.456 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 36.099ms
2024-04-12 16:31:55.515 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:31:55.516 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:31:55.516 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:31:55.521 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:31:55.546 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:31:55.636 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:31:55.636 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 120.5905ms
2024-04-12 16:34:06.778 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:34:06.778 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:34:06.778 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:34:06.798 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:34:06.803 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:34:06.805 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:34:06.806 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 27.853ms
2024-04-12 16:34:20.753 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 16:34:20.754 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:34:20.754 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 1.3454ms
2024-04-12 16:34:20.760 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 46
2024-04-12 16:34:20.760 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:34:20.760 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:34:20.763 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:34:20.853 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:34:20.855 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:34:20.855 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:34:20.855 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:34:20.855 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 95.3649ms
2024-04-12 16:34:20.859 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:34:20.859 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:34:20.859 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:34:20.861 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:34:20.862 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:34:20.862 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 3.1065ms
2024-04-12 16:34:20.898 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:34:20.899 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:34:20.899 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:34:20.901 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:34:20.905 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:34:20.995 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:34:20.995 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 96.4524ms
2024-04-12 16:34:58.396 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:34:58.397 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:34:58.397 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:34:58.404 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:34:58.411 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:34:58.414 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:34:58.414 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 18.0849ms
2024-04-12 16:35:02.511 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:35:02.512 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:35:02.512 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:35:02.518 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:35:02.552 +07:00 [INF] Executed DbCommand (33ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:35:02.557 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:35:02.558 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 46.3346ms
2024-04-12 16:38:41.664 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:38:42.087 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:38:42.400 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:38:42.418 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:38:42.439 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:38:42.448 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:38:42.450 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:38:42.457 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:38:43.899 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:38:44.296 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:38:44.593 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:38:44.612 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:38:44.635 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:38:44.646 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:38:44.647 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:38:44.656 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:38:44.838 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 16:38:44.839 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 16:38:44.840 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 16:38:44.841 +07:00 [INF] Hosting environment: Development
2024-04-12 16:38:44.841 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 16:38:44.911 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:38:44.911 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:38:44.989 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 79.2656ms
2024-04-12 16:38:44.989 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 79.6923ms
2024-04-12 16:38:45.032 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:38:45.032 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:38:45.039 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 7.2006ms
2024-04-12 16:38:45.039 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 7.3015ms
2024-04-12 16:39:06.356 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:39:06.365 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:39:06.368 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:39:06.645 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:39:06.763 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:39:06.788 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:39:06.792 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 435.9977ms
2024-04-12 16:39:54.026 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 16:39:54.028 +07:00 [INF] CORS policy execution failed.
2024-04-12 16:39:54.028 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 16:39:54.028 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:39:54.109 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:39:54.248 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:39:54.261 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:39:54.268 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:39:54.269 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:39:54.270 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 243.2942ms
2024-04-12 16:39:56.584 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:39:56.585 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:39:56.585 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:39:56.597 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:39:56.601 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:39:56.605 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:39:56.606 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 22.0467ms
2024-04-12 16:40:06.781 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:40:06.781 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:40:06.811 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:40:06.818 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:40:06.818 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 37.1963ms
2024-04-12 16:40:09.920 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:40:09.921 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:40:09.921 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:40:09.927 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:40:09.934 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:40:09.936 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:40:09.937 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 16.5325ms
2024-04-12 16:40:12.280 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:40:12.281 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:40:12.281 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:40:12.291 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:40:12.332 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:40:12.341 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:40:12.344 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 63.7868ms
2024-04-12 16:40:28.734 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 16:40:28.737 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:40:28.738 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 3.5436ms
2024-04-12 16:40:28.743 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 16:40:28.744 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:40:28.744 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:40:28.748 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:40:28.837 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:40:28.840 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:40:28.842 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:40:28.842 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:40:28.842 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 98.5018ms
2024-04-12 16:40:28.846 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:40:28.846 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:40:28.846 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:40:28.851 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:40:28.852 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:40:28.853 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 6.492ms
2024-04-12 16:40:28.885 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:40:28.885 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:40:28.885 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:40:28.893 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:40:28.899 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:40:28.901 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:40:28.901 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 16.3507ms
2024-04-12 16:40:47.914 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:40:47.914 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:40:47.914 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:40:47.917 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:40:47.922 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:40:47.925 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:40:47.926 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 12.0869ms
2024-04-12 16:41:48.474 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:41:48.474 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:41:48.474 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:41:48.484 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:41:48.491 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:41:48.494 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:41:48.494 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 19.9907ms
2024-04-12 16:41:53.499 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:41:53.500 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:41:53.500 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:41:53.511 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:41:53.516 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:41:53.520 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:41:53.521 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 21.6357ms
2024-04-12 16:41:59.523 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:41:59.524 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:41:59.524 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:41:59.529 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:41:59.534 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:41:59.539 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:41:59.539 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 15.8248ms
2024-04-12 16:42:01.470 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:42:01.470 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:42:01.471 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:42:01.475 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:42:01.488 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:42:01.491 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:42:01.491 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 21.1784ms
2024-04-12 16:42:09.508 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:42:09.508 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:42:09.508 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:42:09.512 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:42:09.518 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:42:09.521 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:42:09.521 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 13.3818ms
2024-04-12 16:42:16.713 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:42:16.714 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:42:16.714 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:42:16.717 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:42:16.726 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:42:16.731 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:42:16.732 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 18.1787ms
2024-04-12 16:44:31.387 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:44:31.388 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:44:31.388 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:44:31.447 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:44:31.460 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:44:31.463 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:44:31.464 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 76.7739ms
2024-04-12 16:44:39.395 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:44:39.396 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:44:39.398 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:44:39.510 +07:00 [INF] Executed DbCommand (106ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:44:39.581 +07:00 [INF] Executed DbCommand (70ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:44:39.642 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:44:39.643 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 247.8314ms
2024-04-12 16:44:45.455 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:44:45.455 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:44:45.456 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:44:45.459 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:44:45.467 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:44:45.474 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:44:45.474 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 19.4619ms
2024-04-12 16:44:58.770 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 16:44:58.770 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:44:58.770 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 0.7509ms
2024-04-12 16:44:58.774 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 16:44:58.774 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:44:58.774 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:44:58.810 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:44:59.084 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:44:59.089 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:44:59.094 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:44:59.094 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:44:59.094 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 320.7105ms
2024-04-12 16:44:59.101 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:44:59.101 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:44:59.101 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:44:59.109 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:44:59.109 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:44:59.110 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 8.6512ms
2024-04-12 16:44:59.155 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:44:59.155 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:44:59.155 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:44:59.160 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:44:59.169 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:44:59.174 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:44:59.175 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 20.6005ms
2024-04-12 16:45:24.648 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:45:24.649 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:45:24.649 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:45:24.653 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:45:24.695 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:45:24.715 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:45:24.715 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 66.6795ms
2024-04-12 16:45:25.597 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:45:25.597 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:45:25.597 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:45:25.687 +07:00 [INF] Executed DbCommand (88ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:45:25.721 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:45:25.763 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:45:25.764 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 166.8695ms
2024-04-12 16:46:10.175 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:46:10.799 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:46:11.149 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:11.172 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:46:11.193 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:11.206 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:11.208 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:46:11.220 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:46:14.012 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:46:14.742 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:46:15.185 +07:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:15.210 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:46:15.237 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:15.256 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:15.258 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:46:15.272 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:46:15.536 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 16:46:15.536 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 16:46:15.538 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 16:46:15.538 +07:00 [INF] Hosting environment: Development
2024-04-12 16:46:15.539 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 16:46:15.653 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:46:15.653 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:46:15.832 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 180.6537ms
2024-04-12 16:46:15.835 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 184.322ms
2024-04-12 16:46:15.937 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:46:15.955 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 17.6663ms
2024-04-12 16:46:46.298 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:46:46.922 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:46:47.239 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:47.261 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:46:47.287 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:47.298 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:47.301 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:46:47.313 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:46:49.957 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:46:50.605 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:46:50.925 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:50.945 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:46:50.970 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:50.986 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:46:50.989 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:46:50.998 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:46:51.272 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 16:46:51.272 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 16:46:51.276 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 16:46:51.277 +07:00 [INF] Hosting environment: Development
2024-04-12 16:46:51.277 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 16:46:51.355 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:46:51.496 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 141.1032ms
2024-04-12 16:46:51.552 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:46:51.563 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 10.6088ms
2024-04-12 16:47:24.701 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 16:47:24.708 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:47:24.710 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 9.3563ms
2024-04-12 16:47:24.721 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 16:47:24.728 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:47:24.729 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:47:24.732 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:47:25.364 +07:00 [INF] Executed DbCommand (18ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:47:25.935 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:47:25.986 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:47:26.007 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:47:26.009 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:47:26.018 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 1296.5158ms
2024-04-12 16:47:26.023 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:47:26.024 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:47:26.025 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:47:26.025 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:47:26.051 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:47:26.051 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:47:26.051 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:47:26.051 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:47:26.481 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:47:26.494 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:47:26.510 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:47:26.511 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 487.7557ms
2024-04-12 16:47:26.638 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:47:26.692 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:47:26.693 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 641.9119ms
2024-04-12 16:47:51.103 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 16:47:51.113 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 16:47:51.122 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-04-12 16:47:51.296 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 500 null text/plain; charset=utf-8 193.2398ms
2024-04-12 16:48:43.555 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:48:44.181 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:48:44.523 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:48:44.541 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:48:44.562 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:48:44.577 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:48:44.578 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:48:44.586 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:48:47.435 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:48:48.218 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:48:48.615 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:48:48.634 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:48:48.661 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:48:48.674 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:48:48.676 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:48:48.684 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:48:48.948 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 16:48:48.948 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 16:48:48.951 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 16:48:48.951 +07:00 [INF] Hosting environment: Development
2024-04-12 16:48:48.951 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 16:48:49.059 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:48:49.172 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 114.7748ms
2024-04-12 16:48:49.268 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:48:49.278 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 10.7078ms
2024-04-12 16:48:54.924 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 16:48:54.946 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 16:48:54.954 +07:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2024-04-12 16:48:54.956 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 302 0 null 31.4326ms
2024-04-12 16:48:54.957 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/Account/Login?ReturnUrl=%2Fapi%2FActivity%2Ftambah - null null
2024-04-12 16:48:54.963 +07:00 [INF] Executing endpoint 'Fallback {*path:nonfile}'
2024-04-12 16:48:54.964 +07:00 [INF] Executed endpoint 'Fallback {*path:nonfile}'
2024-04-12 16:48:54.965 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/index.html?ReturnUrl=%2Fapi%2FActivity%2Ftambah - 404 0 null 7.3995ms
2024-04-12 16:48:54.965 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/index.html, Response status code: 404
2024-04-12 16:49:10.534 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:49:10.537 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:10.538 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:10.538 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:49:11.374 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:49:11.679 +07:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:49:11.743 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:49:11.751 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 1217.0526ms
2024-04-12 16:49:13.672 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:49:13.674 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:13.674 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:13.721 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:49:13.880 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:49:13.887 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:49:13.895 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:49:13.896 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 223.9972ms
2024-04-12 16:49:38.609 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 16:49:38.612 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:38.614 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 4.1167ms
2024-04-12 16:49:38.616 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 46
2024-04-12 16:49:38.621 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:38.622 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:38.622 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:49:38.715 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:49:39.199 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:49:39.229 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:49:39.244 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:49:39.250 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:49:39.251 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 634.2241ms
2024-04-12 16:49:39.261 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:49:39.262 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:39.265 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:39.265 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:49:39.333 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:49:39.334 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:39.334 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:39.334 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:49:39.340 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE FALSE
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:49:39.345 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:49:39.353 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:49:39.357 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:49:39.358 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 25.2224ms
2024-04-12 16:49:39.359 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:49:39.359 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 97.5588ms
2024-04-12 16:49:43.057 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:49:43.058 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:43.059 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:49:43.059 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:49:43.064 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:49:43.071 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:49:43.077 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:49:43.078 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 19.8402ms
2024-04-12 16:49:47.963 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 16:49:47.968 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 16:49:47.969 +07:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2024-04-12 16:49:47.970 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 302 0 null 6.2892ms
2024-04-12 16:49:47.972 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/Account/Login?ReturnUrl=%2Fapi%2FActivity%2Ftambah - null null
2024-04-12 16:49:47.972 +07:00 [INF] Executing endpoint 'Fallback {*path:nonfile}'
2024-04-12 16:49:47.973 +07:00 [INF] Executed endpoint 'Fallback {*path:nonfile}'
2024-04-12 16:49:47.973 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/index.html?ReturnUrl=%2Fapi%2FActivity%2Ftambah - 404 0 null 1.2287ms
2024-04-12 16:49:47.974 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/index.html, Response status code: 404
2024-04-12 16:49:51.879 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:49:51.883 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 3.5802ms
2024-04-12 16:49:51.956 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:49:51.957 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.776ms
2024-04-12 16:49:56.853 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 16:49:56.856 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 16:49:56.856 +07:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2024-04-12 16:49:56.857 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 302 0 null 4.02ms
2024-04-12 16:49:56.860 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/Account/Login?ReturnUrl=%2Fapi%2FActivity%2Ftambah - null null
2024-04-12 16:49:56.860 +07:00 [INF] Executing endpoint 'Fallback {*path:nonfile}'
2024-04-12 16:49:56.860 +07:00 [INF] Executed endpoint 'Fallback {*path:nonfile}'
2024-04-12 16:49:56.860 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/index.html?ReturnUrl=%2Fapi%2FActivity%2Ftambah - 404 0 null 0.8638ms
2024-04-12 16:49:56.861 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/index.html, Response status code: 404
2024-04-12 16:50:53.887 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:50:54.555 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:50:54.904 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:50:54.926 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:50:54.951 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:50:54.964 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:50:54.966 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:50:54.975 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:50:57.482 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 16:50:58.157 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 16:50:58.500 +07:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:50:58.524 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:50:58.550 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:50:58.564 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 16:50:58.566 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 16:50:58.576 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 16:50:58.908 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 16:50:58.908 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 16:50:58.910 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 16:50:58.910 +07:00 [INF] Hosting environment: Development
2024-04-12 16:50:58.910 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 16:50:59.018 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:50:59.156 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 139.6524ms
2024-04-12 16:50:59.246 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:50:59.255 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 8.786ms
2024-04-12 16:51:06.242 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 16:51:06.261 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 16:51:06.267 +07:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2024-04-12 16:51:06.270 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 302 0 null 27.3001ms
2024-04-12 16:51:06.270 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/Account/Login?ReturnUrl=%2Fapi%2FActivity%2Ftambah - null null
2024-04-12 16:51:06.279 +07:00 [INF] Executing endpoint 'Fallback {*path:nonfile}'
2024-04-12 16:51:06.281 +07:00 [INF] Executed endpoint 'Fallback {*path:nonfile}'
2024-04-12 16:51:06.281 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/index.html?ReturnUrl=%2Fapi%2FActivity%2Ftambah - 404 0 null 10.8211ms
2024-04-12 16:51:06.282 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/index.html, Response status code: 404
2024-04-12 16:51:12.706 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:51:12.709 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:12.710 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:12.710 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:13.535 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:51:13.824 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:51:13.859 +07:00 [WRN] Reactivities_jason Long Running Request: ListQuery (1087 milliseconds)   {"ListId":1,"PageNumber":1,"PageSize":10,"$type":"ListQuery"}
2024-04-12 16:51:13.896 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:13.903 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 1196.7386ms
2024-04-12 16:51:15.058 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:51:15.059 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:15.059 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:15.059 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:15.259 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:51:15.266 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:51:15.273 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:15.273 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 215.7258ms
2024-04-12 16:51:26.887 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 16:51:26.887 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:26.890 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 2.6286ms
2024-04-12 16:51:26.893 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 16:51:26.895 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:26.896 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:26.896 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:51:26.990 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:51:27.538 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:51:27.572 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:51:27.587 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:51:27.592 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:51:27.593 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 700.1234ms
2024-04-12 16:51:27.603 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:51:27.604 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:27.604 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:27.604 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:51:27.650 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:51:27.651 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:27.651 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:27.652 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:27.690 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:51:27.695 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:51:27.700 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:27.701 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 50.0824ms
2024-04-12 16:51:27.614 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:51:27.860 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:51:27.971 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:51:28.081 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:51:28.086 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:51:28.088 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 16:51:28.122 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 519.7707ms
2024-04-12 16:51:33.924 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 16:51:33.929 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-04-12 16:51:33.930 +07:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2024-04-12 16:51:33.930 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 302 0 null 6.2243ms
2024-04-12 16:51:33.933 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/Account/Login?ReturnUrl=%2Fapi%2FActivity%2Ftambah - null null
2024-04-12 16:51:33.934 +07:00 [INF] Executing endpoint 'Fallback {*path:nonfile}'
2024-04-12 16:51:33.934 +07:00 [INF] Executed endpoint 'Fallback {*path:nonfile}'
2024-04-12 16:51:33.934 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/index.html?ReturnUrl=%2Fapi%2FActivity%2Ftambah - 404 0 null 1.0719ms
2024-04-12 16:51:33.934 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/index.html, Response status code: 404
2024-04-12 16:51:36.537 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:51:36.538 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:36.538 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:36.538 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:36.549 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:51:36.556 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:51:36.562 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:36.563 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 25.7827ms
2024-04-12 16:51:38.938 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:51:38.941 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 2.7102ms
2024-04-12 16:51:38.999 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:51:39.000 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.6588ms
2024-04-12 16:51:40.172 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:51:40.173 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:40.173 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:40.173 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:40.177 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:51:40.184 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:51:40.189 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:40.189 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 16.901ms
2024-04-12 16:51:43.126 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:51:43.126 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:43.126 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:43.129 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:43.155 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:51:43.196 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:51:43.202 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:43.202 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 76.1891ms
2024-04-12 16:51:45.151 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:51:45.154 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:45.154 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:45.154 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:45.160 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:51:45.183 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:51:45.191 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:45.191 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 40.1591ms
2024-04-12 16:51:46.818 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:51:46.819 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:46.820 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:51:46.821 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:46.842 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:51:46.863 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:51:46.880 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:51:46.881 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 63.3307ms
2024-04-12 16:52:01.361 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:52:01.361 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:52:01.361 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:52:01.361 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:52:01.365 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:52:01.371 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:52:01.374 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:52:01.374 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 13.6035ms
2024-04-12 16:52:20.058 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:52:20.060 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:52:20.060 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:52:20.062 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:52:20.067 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:52:20.099 +07:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:52:20.114 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:52:20.115 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 56.8314ms
2024-04-12 16:52:21.792 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:52:21.793 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:52:21.793 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:52:21.793 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:52:21.803 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:52:21.839 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:52:21.856 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:52:21.856 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 63.7558ms
2024-04-12 16:52:56.432 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 16:52:56.433 +07:00 [INF] CORS policy execution failed.
2024-04-12 16:52:56.433 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 16:52:56.433 +07:00 [INF] CORS policy execution failed.
2024-04-12 16:52:56.433 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 16:52:56.433 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:52:56.440 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:52:56.630 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:52:56.636 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:52:56.638 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:52:56.639 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:52:56.639 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 206.828ms
2024-04-12 16:53:03.128 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 16:53:03.137 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 9.2213ms
2024-04-12 16:53:03.137 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 16:53:03.456 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 16:53:03.457 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 1.4658ms
2024-04-12 16:53:03.458 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 16:53:03.467 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 16:53:03.468 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 1.5279ms
2024-04-12 16:53:03.468 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 16:53:03.541 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:53:03.542 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:53:03.543 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:53:03.543 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:53:03.547 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:53:03.553 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:53:03.557 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:53:03.557 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 15.9991ms
2024-04-12 16:53:06.293 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:53:06.294 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:53:06.294 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:53:06.294 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:53:06.298 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:53:06.336 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:53:06.346 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:53:06.347 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 53.3625ms
2024-04-12 16:53:41.490 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 16:53:41.492 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 2.2945ms
2024-04-12 16:53:41.535 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 16:53:41.535 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 0.8161ms
2024-04-12 16:53:41.837 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 16:53:41.838 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 1.1575ms
2024-04-12 16:53:41.838 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 16:53:41.844 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 16:53:41.845 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 1.1344ms
2024-04-12 16:53:41.845 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 16:53:41.924 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 16:53:41.926 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 1.3475ms
2024-04-12 16:53:41.926 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 16:53:53.183 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:53:53.184 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:53:53.251 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@___user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @___user_Id_0
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 16:53:53.275 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:53:53.275 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 92.4439ms
2024-04-12 16:54:51.932 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:54:51.932 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:54:51.932 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:54:51.932 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:54:51.938 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:54:51.943 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:54:51.948 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:54:51.948 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 16.6003ms
2024-04-12 16:54:53.895 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:54:53.899 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:54:53.899 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:54:53.899 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:54:53.908 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:54:53.913 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:54:53.921 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:54:53.922 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 26.9696ms
2024-04-12 16:55:29.991 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:55:29.992 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:55:29.992 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:55:29.993 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:55:29.998 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:55:30.004 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:55:30.012 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:55:30.012 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 20.8839ms
2024-04-12 16:55:51.096 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:55:51.097 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:55:51.097 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:55:51.097 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:55:51.104 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:51.205 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:51.316 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:51.420 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:51.421 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:55:51.421 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 16:55:51.424 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 327.8065ms
2024-04-12 16:55:54.872 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:55:54.887 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:55:54.887 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:55:54.887 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:55:54.896 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:55:54.896 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:55:54.896 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:55:54.897 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:55:54.898 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:55.015 +07:00 [INF] Executed DbCommand (120ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:55:55.015 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:55.033 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:55:55.045 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:55:55.045 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 172.4243ms
2024-04-12 16:55:55.132 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:55.242 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:55.243 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:55:55.243 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 16:55:55.246 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 350.0005ms
2024-04-12 16:55:55.247 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:55:55.248 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:55:55.248 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:55:55.248 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:55:55.249 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:55.354 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:55.465 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:55.577 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:55:55.578 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:55:55.578 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 16:55:55.580 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 332.4719ms
2024-04-12 16:56:24.175 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:56:24.176 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:56:24.176 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:56:24.176 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:56:24.180 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:24.293 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:24.403 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:24.554 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:24.555 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:56:24.555 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 16:56:24.557 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 382.2789ms
2024-04-12 16:56:24.561 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:56:24.561 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:56:24.562 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:56:24.562 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:56:24.562 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:24.672 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:24.783 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:24.894 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:24.895 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:56:24.895 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 16:56:24.897 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 336.3782ms
2024-04-12 16:56:39.378 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 16:56:39.378 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:56:39.378 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 0.5913ms
2024-04-12 16:56:39.381 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 16:56:39.381 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:56:39.381 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:56:39.381 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:56:39.405 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:56:39.689 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:56:39.692 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:56:39.693 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:56:39.693 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:56:39.694 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 312.877ms
2024-04-12 16:56:39.701 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:56:39.701 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:56:39.701 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:56:39.701 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:56:39.702 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:39.727 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:56:39.727 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:56:39.727 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:56:39.727 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:56:39.733 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:56:39.741 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:56:39.764 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:56:39.765 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 38.0657ms
2024-04-12 16:56:39.816 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:39.928 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:40.038 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:56:40.040 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:56:40.040 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 16:56:40.044 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 343.1682ms
2024-04-12 16:58:07.605 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:58:07.606 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:07.606 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:07.606 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:58:07.606 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:58:07.606 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:07.606 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:07.606 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:58:07.607 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:07.611 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:58:07.627 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:58:07.639 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:58:07.639 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 33.7704ms
2024-04-12 16:58:07.711 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:07.822 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:07.969 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:07.970 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:58:07.970 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 16:58:07.976 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 370.6734ms
2024-04-12 16:58:07.978 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:58:07.978 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:07.978 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:07.978 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:58:07.980 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:08.092 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:08.199 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:08.308 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:08.309 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:58:08.309 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 16:58:08.311 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 333.3588ms
2024-04-12 16:58:55.172 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 16:58:55.173 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:55.173 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 0.6315ms
2024-04-12 16:58:55.174 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 46
2024-04-12 16:58:55.174 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:55.175 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:55.175 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:58:55.182 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 16:58:55.411 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 16:58:55.414 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 16:58:55.415 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 16:58:55.415 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 16:58:55.415 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 241.178ms
2024-04-12 16:58:55.422 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 16:58:55.422 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:55.422 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:55.422 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:58:55.423 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:55.474 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 16:58:55.474 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:55.474 +07:00 [INF] CORS policy execution successful.
2024-04-12 16:58:55.475 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:58:55.479 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 16:58:55.483 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 16:58:55.488 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 16:58:55.489 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 15.0237ms
2024-04-12 16:58:55.533 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:55.645 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:55.756 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 16:58:55.757 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 16:58:55.757 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 16:58:55.759 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 337.7088ms
2024-04-12 17:00:27.105 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:00:27.798 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:00:28.140 +07:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:00:28.158 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:00:28.183 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:00:28.196 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:00:28.197 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:00:28.209 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:00:28.413 +07:00 [FTL] Application startup exception
System.InvalidOperationException: Scheme already exists: Identity.Application
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
2024-04-12 17:00:28.423 +07:00 [ERR] Hosting failed to start
System.InvalidOperationException: Scheme already exists: Identity.Application
   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2024-04-12 17:01:19.878 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:01:20.491 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:01:20.862 +07:00 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:01:20.888 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:01:20.923 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:01:20.943 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:01:20.945 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:01:20.960 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:01:23.945 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:01:24.594 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:01:24.964 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:01:24.988 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:01:25.015 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:01:25.031 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:01:25.034 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:01:25.044 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:01:25.336 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 17:01:25.336 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 17:01:25.339 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 17:01:25.339 +07:00 [INF] Hosting environment: Development
2024-04-12 17:01:25.339 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 17:01:25.460 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 17:01:25.742 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 283.8856ms
2024-04-12 17:01:25.795 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 17:01:25.816 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 21.269ms
2024-04-12 17:01:25.876 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 17:01:25.888 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 12.4754ms
2024-04-12 17:01:25.892 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 17:01:26.164 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 17:01:26.169 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 4.9403ms
2024-04-12 17:01:26.170 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 17:01:26.391 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 17:01:26.392 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 0.9211ms
2024-04-12 17:01:26.392 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 17:02:33.051 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 17:02:33.053 +07:00 [INF] CORS policy execution failed.
2024-04-12 17:02:33.054 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 17:02:33.055 +07:00 [INF] CORS policy execution failed.
2024-04-12 17:02:33.055 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 17:02:33.056 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:02:33.358 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:02:33.653 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 17:02:33.675 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 17:02:33.690 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 17:02:33.694 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:02:33.703 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 652.3543ms
2024-04-12 17:02:39.817 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:02:39.818 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:02:39.848 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:02:39.970 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:02:40.074 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:02:40.187 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:02:40.192 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:02:40.194 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:02:40.228 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 411.0457ms
2024-04-12 17:03:08.570 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:03:09.142 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:03:09.413 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:03:09.427 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:03:09.449 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:03:09.464 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:03:09.466 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:03:09.473 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:03:11.334 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:03:11.771 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:03:12.012 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:03:12.031 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:03:12.055 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:03:12.069 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:03:12.070 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:03:12.079 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:03:12.275 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 17:03:12.275 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 17:03:12.277 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 17:03:12.277 +07:00 [INF] Hosting environment: Development
2024-04-12 17:03:12.277 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 17:03:12.351 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 17:03:12.434 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 83.7031ms
2024-04-12 17:03:12.475 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 17:03:12.483 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 7.9369ms
2024-04-12 17:03:12.547 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 17:03:12.558 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 11.1259ms
2024-04-12 17:03:12.561 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 17:03:12.780 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 17:03:12.783 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 2.9695ms
2024-04-12 17:03:12.783 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 17:03:12.839 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 17:03:12.842 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 2.6527ms
2024-04-12 17:03:12.843 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 17:03:44.107 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - application/json 121
2024-04-12 17:03:44.110 +07:00 [INF] CORS policy execution failed.
2024-04-12 17:03:44.110 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 17:03:44.111 +07:00 [INF] CORS policy execution failed.
2024-04-12 17:03:44.111 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 17:03:44.112 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:03:44.421 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:03:44.685 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 17:03:44.711 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 17:03:44.718 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 17:03:44.720 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:03:44.725 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?useCookies=true - 200 0 null 618.5403ms
2024-04-12 17:03:54.916 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:03:54.924 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:03:55.162 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@___user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @___user_Id_0
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 17:03:55.187 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:03:55.187 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 271.7332ms
2024-04-12 17:04:02.588 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Activity/tambah - application/json 166
2024-04-12 17:04:02.594 +07:00 [INF] CORS policy execution failed.
2024-04-12 17:04:02.594 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 17:04:02.594 +07:00 [INF] CORS policy execution failed.
2024-04-12 17:04:02.594 +07:00 [INF] Request origin https://localhost:5001 does not have permission to access the resource.
2024-04-12 17:04:02.594 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Activity/tambah => CreateActivity'
2024-04-12 17:04:02.650 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__GetUsername_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."UserName" = @__GetUsername_0
LIMIT 2
2024-04-12 17:04:02.822 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = DateTime), @p3='?', @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = Boolean), @p8='?' (DbType = Guid), @p9='?', @p10='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Activities" ("Id", "Category", "Date", "Description", "Title", "Venue", "isCanceled", "isPrivate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
INSERT INTO "ActivityAttendees" ("ActivityId", "AppUserId", "isHost")
VALUES (@p8, @p9, @p10);
2024-04-12 17:04:02.846 +07:00 [INF] Create Activity
2024-04-12 17:04:02.850 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Activity/tambah => CreateActivity'
2024-04-12 17:04:02.851 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Activity/tambah - 200 null application/json; charset=utf-8 262.5042ms
2024-04-12 17:04:12.159 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:04:12.160 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:04:12.160 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:12.160 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:12.161 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:04:12.163 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:12.163 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:12.163 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:04:12.171 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:12.299 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:04:12.319 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:12.368 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:04:12.390 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:04:12.390 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 230.6551ms
2024-04-12 17:04:12.432 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:12.539 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:12.541 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:04:12.542 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:04:12.569 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 409.0969ms
2024-04-12 17:04:12.571 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:04:12.571 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:12.571 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:12.571 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:04:12.584 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:12.691 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:12.840 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:12.941 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:12.941 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:04:12.941 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:04:12.943 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 372.0497ms
2024-04-12 17:04:46.121 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 17:04:46.124 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:46.125 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 4.0319ms
2024-04-12 17:04:46.127 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 17:04:46.127 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:46.127 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:46.127 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:04:46.133 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:04:46.246 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 17:04:46.250 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 17:04:46.252 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 17:04:46.252 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:04:46.252 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 125.2544ms
2024-04-12 17:04:46.258 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:04:46.258 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:46.258 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:46.258 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:04:46.259 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:46.293 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:04:46.293 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:46.293 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:04:46.294 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:04:46.305 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:04:46.310 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:04:46.313 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:04:46.313 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 20.1835ms
2024-04-12 17:04:46.364 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:46.467 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:46.577 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:04:46.578 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:04:46.578 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:04:46.580 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 321.662ms
2024-04-12 17:05:37.584 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:05:37.585 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:05:37.585 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:05:37.585 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:05:37.585 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:05:37.585 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:05:37.585 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:05:37.585 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:05:37.589 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:05:37.597 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:05:37.626 +07:00 [INF] Executed DbCommand (27ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:05:37.636 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:05:37.636 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 51.5794ms
2024-04-12 17:05:37.703 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:05:37.810 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:05:37.915 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:05:37.916 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:05:37.916 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:05:37.919 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 333.7142ms
2024-04-12 17:05:37.927 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:05:37.927 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:05:37.927 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:05:37.928 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:05:37.928 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:05:38.037 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:05:38.149 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:05:38.260 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:05:38.260 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:05:38.261 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:05:38.263 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 336.0426ms
2024-04-12 17:05:43.803 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:05:43.803 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:05:43.803 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:05:43.803 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:05:43.808 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:05:43.812 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:05:43.815 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:05:43.815 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 12.3783ms
2024-04-12 17:06:17.348 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:06:18.050 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:06:18.343 +07:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:06:18.358 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:06:18.381 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:06:18.394 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:06:18.395 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:06:18.403 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:06:20.446 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:06:20.898 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:06:21.152 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:06:21.168 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:06:21.193 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:06:21.208 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:06:21.210 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:06:21.216 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:06:21.403 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 17:06:21.403 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 17:06:21.406 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 17:06:21.406 +07:00 [INF] Hosting environment: Development
2024-04-12 17:06:21.406 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 17:06:21.468 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 17:06:21.552 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 84.3839ms
2024-04-12 17:06:21.581 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 17:06:21.592 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 10.0413ms
2024-04-12 17:06:22.145 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 17:06:22.153 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 17:06:22.152 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 7.7133ms
2024-04-12 17:06:22.155 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 17:06:22.157 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 4.4161ms
2024-04-12 17:06:22.157 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 17:06:22.228 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 17:06:22.229 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 0.8269ms
2024-04-12 17:06:22.229 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 17:09:22.356 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:09:22.861 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:09:23.135 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:09:23.150 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:09:23.173 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:09:23.188 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:09:23.189 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:09:23.197 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:09:25.040 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:09:25.529 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:09:25.794 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:09:25.812 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:09:25.836 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:09:25.852 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:09:25.854 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:09:25.861 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:09:26.065 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 17:09:26.065 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 17:09:26.067 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 17:09:26.067 +07:00 [INF] Hosting environment: Development
2024-04-12 17:09:26.068 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 17:09:26.145 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 17:09:26.234 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 89.3813ms
2024-04-12 17:09:26.264 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 17:09:26.275 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 10.4253ms
2024-04-12 17:09:26.741 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 17:09:26.746 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 5.3009ms
2024-04-12 17:09:26.748 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 17:09:26.748 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 17:09:26.751 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 3.0096ms
2024-04-12 17:09:26.752 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 17:09:26.794 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 17:09:26.795 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 0.8997ms
2024-04-12 17:09:26.795 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 17:09:27.605 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:09:27.608 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:27.609 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:27.610 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:09:27.940 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:09:28.091 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:09:28.128 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:09:28.133 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 527.5522ms
2024-04-12 17:09:39.910 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 17:09:39.911 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:39.912 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 1.3618ms
2024-04-12 17:09:39.915 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 17:09:39.916 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:39.917 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:39.917 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:09:40.022 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:09:40.182 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 17:09:40.201 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 17:09:40.206 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 17:09:40.207 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:09:40.208 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 292.9332ms
2024-04-12 17:09:40.213 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:09:40.214 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:40.214 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:40.214 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:09:40.221 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:40.246 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:09:40.247 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:40.247 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:40.247 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:09:40.260 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:09:40.264 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:09:40.267 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:09:40.267 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 21.0671ms
2024-04-12 17:09:40.354 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:40.455 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:40.565 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:40.581 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:09:40.582 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:09:40.606 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 392.3164ms
2024-04-12 17:09:57.702 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:09:57.702 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:57.703 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:57.703 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:09:57.732 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:09:57.733 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:57.733 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:57.733 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:09:57.752 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:57.767 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:09:57.793 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:09:57.810 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:09:57.810 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 108.5578ms
2024-04-12 17:09:57.858 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:57.971 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:58.073 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:58.074 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:09:58.074 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:09:58.077 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 344.4777ms
2024-04-12 17:09:58.079 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:09:58.080 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:58.080 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:09:58.080 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:09:58.085 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:58.192 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:58.300 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:58.410 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:09:58.411 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:09:58.412 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:09:58.414 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 335.5183ms
2024-04-12 17:10:10.982 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:10:11.438 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:10:11.744 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:11.765 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:10:11.789 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:11.803 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:11.805 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:10:11.811 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:10:13.548 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:10:14.072 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:10:14.350 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:14.370 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:10:14.391 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:14.401 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:14.403 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:10:14.410 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:10:14.621 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 17:10:14.621 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 17:10:14.623 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 17:10:14.624 +07:00 [INF] Hosting environment: Development
2024-04-12 17:10:14.624 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 17:10:14.689 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 17:10:14.801 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 112.2336ms
2024-04-12 17:10:14.832 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 17:10:14.841 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 8.9611ms
2024-04-12 17:10:15.276 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 17:10:15.283 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 6.9914ms
2024-04-12 17:10:15.283 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 17:10:15.284 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 17:10:15.286 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 2.6006ms
2024-04-12 17:10:15.286 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 17:10:15.415 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 17:10:15.416 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 0.7102ms
2024-04-12 17:10:15.416 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 17:10:25.628 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 17:10:25.631 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:10:25.632 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 4.4338ms
2024-04-12 17:10:25.638 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 17:10:25.640 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:10:25.640 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:10:25.641 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:10:25.896 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:10:26.164 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 17:10:26.200 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 17:10:26.207 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 17:10:26.209 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:10:26.214 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 575.7398ms
2024-04-12 17:10:26.215 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:10:26.216 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:10:26.216 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:10:26.216 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:10:26.246 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:10:26.246 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:10:26.247 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:10:26.247 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:10:26.246 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:10:26.382 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:10:26.451 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:10:26.485 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:10:26.533 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:10:26.561 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:10:26.562 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 315.8451ms
2024-04-12 17:10:26.587 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:10:26.588 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:10:26.589 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:10:26.607 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 392.038ms
2024-04-12 17:10:37.596 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:10:37.598 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:10:37.599 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:10:37.600 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:10:37.621 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:10:37.631 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:10:37.636 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:10:37.636 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 40.65ms
2024-04-12 17:10:56.694 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:10:57.118 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:10:57.400 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:57.417 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:10:57.442 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:57.453 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:57.455 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:10:57.464 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:10:59.221 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:10:59.680 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:10:59.928 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:59.950 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:10:59.973 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:59.986 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:10:59.988 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:10:59.995 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:11:00.175 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 17:11:00.175 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 17:11:00.177 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 17:11:00.178 +07:00 [INF] Hosting environment: Development
2024-04-12 17:11:00.178 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 17:11:00.242 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 17:11:00.341 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 99.0293ms
2024-04-12 17:11:00.378 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 17:11:00.389 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 10.8981ms
2024-04-12 17:11:00.516 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 17:11:00.522 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 17:11:00.522 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 6.3343ms
2024-04-12 17:11:00.524 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 17:11:00.527 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 4.3797ms
2024-04-12 17:11:00.527 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 17:11:00.591 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 17:11:00.591 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 0.8525ms
2024-04-12 17:11:00.592 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 17:11:04.582 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 17:11:04.584 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:11:04.585 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 2.8427ms
2024-04-12 17:11:04.591 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 17:11:04.592 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:11:04.592 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:11:04.593 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:11:04.769 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:11:04.974 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:11:05.063 +07:00 [INF] Executed DbCommand (18ms) [Parameters=[@p18='?', @p0='?' (DbType = Int32), @p1='?', @p2='?', @p19='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?', @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "Bio" = @p1, "ConcurrencyStamp" = @p2, "DisplayName" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "ExpireVerifyCode" = @p6, "LockoutEnabled" = @p7, "LockoutEnd" = @p8, "NormalizedEmail" = @p9, "NormalizedUserName" = @p10, "PasswordHash" = @p11, "PhoneNumber" = @p12, "PhoneNumberConfirmed" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16, "VerifyCode" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2024-04-12 17:11:05.081 +07:00 [INF] Setting HTTP status code 401.
2024-04-12 17:11:05.088 +07:00 [INF] Writing value of type 'ProblemDetails' as Json.
2024-04-12 17:11:05.091 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:11:05.095 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 401 null application/problem+json 503.8885ms
2024-04-12 17:11:22.103 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 17:11:22.104 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:11:22.104 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 1.0559ms
2024-04-12 17:11:22.106 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 17:11:22.107 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:11:22.107 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:11:22.107 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:11:22.167 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:11:22.273 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:11:22.286 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@p18='?', @p0='?' (DbType = Int32), @p1='?', @p2='?', @p19='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?', @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "Bio" = @p1, "ConcurrencyStamp" = @p2, "DisplayName" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "ExpireVerifyCode" = @p6, "LockoutEnabled" = @p7, "LockoutEnd" = @p8, "NormalizedEmail" = @p9, "NormalizedUserName" = @p10, "PasswordHash" = @p11, "PhoneNumber" = @p12, "PhoneNumberConfirmed" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16, "VerifyCode" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2024-04-12 17:11:22.359 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 17:11:22.401 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 17:11:22.411 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 17:11:22.413 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:11:22.414 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 307.5071ms
2024-04-12 17:11:22.419 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:11:22.420 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:11:22.420 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:11:22.420 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:11:22.438 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:11:22.438 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:11:22.438 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:11:22.439 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:11:22.447 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:11:22.569 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:11:22.627 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:11:22.677 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:11:22.726 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:11:22.753 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:11:22.754 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 316.1005ms
2024-04-12 17:11:22.781 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:11:22.782 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:11:22.783 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:11:22.787 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 367.596ms
2024-04-12 17:12:01.059 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 17:12:01.060 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:01.061 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 1.8517ms
2024-04-12 17:12:01.064 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 17:12:01.064 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:01.064 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:01.064 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:12:01.079 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:12:01.171 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 17:12:01.175 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 17:12:01.176 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 17:12:01.176 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:12:01.176 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 112.4799ms
2024-04-12 17:12:01.180 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:12:01.181 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:01.181 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:01.181 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:12:01.183 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:12:01.220 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:12:01.220 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:01.220 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:01.220 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:12:01.231 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:12:01.237 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:12:01.242 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:12:01.243 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 22.9112ms
2024-04-12 17:12:01.290 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:12:01.393 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:12:01.505 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:12:01.506 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:12:01.507 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:12:01.509 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 328.9571ms
2024-04-12 17:12:30.085 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:12:30.533 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:12:30.786 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:12:30.802 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:12:30.822 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:12:30.835 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:12:30.837 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:12:30.843 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:12:32.585 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:12:32.987 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:12:33.232 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:12:33.248 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:12:33.272 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:12:33.283 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:12:33.285 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:12:33.291 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:12:33.498 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 17:12:33.498 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 17:12:33.499 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 17:12:33.500 +07:00 [INF] Hosting environment: Development
2024-04-12 17:12:33.500 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 17:12:33.565 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 17:12:33.650 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 85.8264ms
2024-04-12 17:12:33.678 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 17:12:33.685 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 7.7128ms
2024-04-12 17:12:33.818 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 17:12:33.822 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 4.5745ms
2024-04-12 17:12:33.824 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 17:12:33.827 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 17:12:33.829 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 2.4712ms
2024-04-12 17:12:33.829 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 17:12:33.904 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 17:12:33.905 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 0.7159ms
2024-04-12 17:12:33.905 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 17:12:34.084 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 17:12:34.089 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:34.091 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 7.4784ms
2024-04-12 17:12:34.102 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 17:12:34.104 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:34.105 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:34.106 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:12:34.361 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:12:34.525 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:12:34.618 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@p18='?', @p0='?' (DbType = Int32), @p1='?', @p2='?', @p19='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?', @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "Bio" = @p1, "ConcurrencyStamp" = @p2, "DisplayName" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "ExpireVerifyCode" = @p6, "LockoutEnabled" = @p7, "LockoutEnd" = @p8, "NormalizedEmail" = @p9, "NormalizedUserName" = @p10, "PasswordHash" = @p11, "PhoneNumber" = @p12, "PhoneNumberConfirmed" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16, "VerifyCode" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2024-04-12 17:12:34.634 +07:00 [INF] Setting HTTP status code 401.
2024-04-12 17:12:34.641 +07:00 [INF] Writing value of type 'ProblemDetails' as Json.
2024-04-12 17:12:34.644 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:12:34.650 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 401 null application/problem+json 548.1137ms
2024-04-12 17:12:44.539 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 17:12:44.541 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:44.542 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 2.2224ms
2024-04-12 17:12:44.544 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 17:12:44.545 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:44.545 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:44.545 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:12:44.660 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:12:44.764 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:12:44.775 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@p18='?', @p0='?' (DbType = Int32), @p1='?', @p2='?', @p19='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?', @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "Bio" = @p1, "ConcurrencyStamp" = @p2, "DisplayName" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "ExpireVerifyCode" = @p6, "LockoutEnabled" = @p7, "LockoutEnd" = @p8, "NormalizedEmail" = @p9, "NormalizedUserName" = @p10, "PasswordHash" = @p11, "PhoneNumber" = @p12, "PhoneNumberConfirmed" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16, "VerifyCode" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2024-04-12 17:12:44.816 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 17:12:44.848 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 17:12:44.854 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 17:12:44.855 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:12:44.856 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 311.2153ms
2024-04-12 17:12:44.862 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:12:44.862 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:44.862 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:44.862 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:12:44.877 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:12:44.878 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:44.878 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:12:44.878 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:12:44.890 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:12:45.018 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:12:45.097 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:12:45.120 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:12:45.160 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:12:45.199 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:12:45.200 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 322.538ms
2024-04-12 17:12:45.222 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:12:45.223 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:12:45.224 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:12:45.229 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 367.1895ms
2024-04-12 17:13:33.408 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:13:33.410 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:13:33.410 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:13:33.411 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:13:33.412 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:13:33.412 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:13:33.412 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:13:33.412 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:13:33.416 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:13:33.442 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:13:33.452 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:13:33.460 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:13:33.460 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 51.9815ms
2024-04-12 17:13:33.528 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:13:33.637 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:13:33.750 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:13:33.751 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:13:33.751 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:13:33.753 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 341.0451ms
2024-04-12 17:13:33.754 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:13:33.755 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:13:33.755 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:13:33.755 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:13:33.773 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:13:33.881 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:13:33.991 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:13:34.102 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:13:34.106 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:13:34.106 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:13:34.108 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 353.3663ms
2024-04-12 17:14:14.823 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:14:15.247 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:14:15.512 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:14:15.554 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:14:15.600 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:14:15.614 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:14:15.616 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:14:15.626 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:14:17.332 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:14:17.856 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:14:18.103 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:14:18.119 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:14:18.141 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:14:18.154 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:14:18.156 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:14:18.165 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:14:18.364 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 17:14:18.364 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 17:14:18.367 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 17:14:18.367 +07:00 [INF] Hosting environment: Development
2024-04-12 17:14:18.367 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 17:14:18.440 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 17:14:18.556 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 116.5422ms
2024-04-12 17:14:18.591 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 17:14:18.605 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 13.6939ms
2024-04-12 17:14:18.728 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 17:14:18.735 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 6.9012ms
2024-04-12 17:14:18.736 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 17:14:18.739 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 17:14:18.742 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 2.8006ms
2024-04-12 17:14:18.743 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 17:14:18.817 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 17:14:18.818 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 0.8612ms
2024-04-12 17:14:18.819 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 17:14:39.921 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 17:14:39.923 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:39.924 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 2.8959ms
2024-04-12 17:14:39.931 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 17:14:39.934 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:39.934 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:39.935 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:14:40.137 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:14:40.405 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 17:14:40.438 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 17:14:40.445 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 17:14:40.446 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:14:40.450 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 518.7537ms
2024-04-12 17:14:40.453 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:14:40.453 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:40.453 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:40.454 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:14:40.481 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:40.504 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:14:40.505 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:40.505 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:40.505 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:14:40.607 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:40.725 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:40.753 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:14:40.832 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:14:40.835 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:40.836 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:14:40.837 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:14:40.858 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 404.7234ms
2024-04-12 17:14:40.864 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:14:40.864 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 359.8365ms
2024-04-12 17:14:51.258 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:14:51.258 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:14:51.260 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:51.260 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:51.260 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:51.260 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:51.261 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:14:51.261 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:14:51.264 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:51.285 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:14:51.297 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:14:51.309 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:14:51.309 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 51.3553ms
2024-04-12 17:14:51.374 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:51.485 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:51.589 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:51.591 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:14:51.591 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:14:51.594 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 336.1901ms
2024-04-12 17:14:51.598 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:14:51.598 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:51.598 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:51.599 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:14:51.615 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:51.730 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:51.844 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:51.954 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:51.954 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:14:51.954 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:14:51.956 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 357.827ms
2024-04-12 17:14:53.116 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:14:53.117 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:53.117 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:53.117 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:14:53.118 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:14:53.119 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:53.119 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:53.119 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:14:53.120 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:53.131 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:14:53.141 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:14:53.159 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:14:53.159 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 42.9499ms
2024-04-12 17:14:53.228 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:53.338 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:53.445 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:53.445 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:14:53.445 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:14:53.446 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 327.8686ms
2024-04-12 17:14:53.448 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:14:53.449 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:53.449 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:14:53.449 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:14:53.450 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:53.555 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:53.665 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:53.777 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:14:53.778 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:14:53.778 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:14:53.779 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 330.4674ms
2024-04-12 17:16:07.564 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:16:07.565 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:16:07.565 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:16:07.565 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:16:07.571 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:16:07.578 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:16:07.592 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:16:07.593 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 28.4861ms
2024-04-12 17:20:44.841 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:20:45.248 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:20:45.545 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:20:45.565 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:20:45.590 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:20:45.600 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:20:45.602 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:20:45.610 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:20:47.271 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:20:47.784 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:20:48.097 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:20:48.113 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:20:48.137 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:20:48.152 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:20:48.154 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:20:48.162 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:20:48.402 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 17:20:48.402 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 17:20:48.404 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 17:20:48.404 +07:00 [INF] Hosting environment: Development
2024-04-12 17:20:48.404 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 17:20:48.468 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 17:20:48.565 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 98.8552ms
2024-04-12 17:20:48.605 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 17:20:48.616 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 10.5002ms
2024-04-12 17:20:48.983 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 17:20:48.987 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 17:20:48.988 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 5.4653ms
2024-04-12 17:20:48.990 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 17:20:48.991 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 3.5992ms
2024-04-12 17:20:48.992 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 17:20:49.123 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 17:20:49.124 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 0.9689ms
2024-04-12 17:20:49.124 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 17:20:52.132 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:20:52.134 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:20:52.136 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:20:52.137 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:20:52.470 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:20:52.628 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:20:52.659 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:20:52.664 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 532.2644ms
2024-04-12 17:21:05.604 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 17:21:05.605 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:05.606 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 2.0033ms
2024-04-12 17:21:05.610 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 17:21:05.612 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:05.612 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:05.613 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:21:05.699 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:21:05.846 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 17:21:05.862 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 17:21:05.868 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 17:21:05.870 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:21:05.870 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 260.4139ms
2024-04-12 17:21:05.875 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:21:05.876 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:05.876 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:05.876 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:21:05.883 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:21:05.915 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:21:05.916 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:05.916 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:05.916 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:21:05.927 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:21:05.934 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:21:05.937 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:21:05.938 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 22.5025ms
2024-04-12 17:21:06.009 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:21:06.111 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:21:06.224 +07:00 [ERR] Reactivities_jason Request: Unhandled Exception for Request GetUserQuery {"$type":"GetUserQuery"}
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
2024-04-12 17:21:06.225 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:21:06.226 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.UnauthorizedAccessException: Attempted to perform an unauthorized operation.
   at Reactivities_jason.Application.Common.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\AuthorizationBehaviour.cs:line 30
   at Reactivities_jason.Application.Common.Behaviours.UnhandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\UnhandledExceptionBehaviour.cs:line 18
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.<>c__DisplayClass3_0.<<Handle>b__2>d.MoveNext() in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
--- End of stack trace from previous location ---
   at Polly.Retry.AsyncRetryEngine.ImplementationAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Func`5 onRetryAsync, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider, Boolean continueOnCapturedContext)
   at Polly.AsyncPolicy.ExecuteAsync[TResult](Func`3 action, Context context, CancellationToken cancellationToken, Boolean continueOnCapturedContext)
   at Reactivities_jason.Application.Common.Behaviours.RetryBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\Application\Common\Behaviours\RetryBehavior.cs:line 24
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2024-04-12 17:21:06.241 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 401 null application/json; charset=utf-8 366.3176ms
2024-04-12 17:21:21.612 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:21:22.082 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:21:22.327 +07:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:21:22.341 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:21:22.364 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:21:22.378 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:21:22.379 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:21:22.386 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:21:24.007 +07:00 [INF] User profile is available. Using 'C:\Users\UT School\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-04-12 17:21:24.473 +07:00 [WRN] The entity type 'Colour' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2024-04-12 17:21:24.712 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:21:24.726 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:21:24.746 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:21:24.758 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)
2024-04-12 17:21:24.759 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-04-12 17:21:24.766 +07:00 [INF] No migrations were applied. The database is already up to date.
2024-04-12 17:21:24.969 +07:00 [INF] Now listening on: https://localhost:5001
2024-04-12 17:21:24.969 +07:00 [INF] Now listening on: http://localhost:5000
2024-04-12 17:21:24.971 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-04-12 17:21:24.972 +07:00 [INF] Hosting environment: Development
2024-04-12 17:21:24.972 +07:00 [INF] Content root path: C:\Users\UT School\Documents\Okta Daffa Ramadani\React JS And ASP\Reactivities-jason\src\web
2024-04-12 17:21:25.040 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - null null
2024-04-12 17:21:25.152 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/index.html?url=/api/specification.json - 200 null text/html; charset=utf-8 111.6767ms
2024-04-12 17:21:25.204 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - null null
2024-04-12 17:21:25.215 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/_framework/aspnetcore-browser-refresh.js - 200 13732 application/javascript; charset=utf-8 11.0684ms
2024-04-12 17:21:25.591 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - null null
2024-04-12 17:21:25.597 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - null null
2024-04-12 17:21:25.597 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui.css.map - 404 0 null 6.105ms
2024-04-12 17:21:25.598 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui.css.map, Response status code: 404
2024-04-12 17:21:25.599 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-bundle.js.map - 404 0 null 2.6818ms
2024-04-12 17:21:25.600 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-bundle.js.map, Response status code: 404
2024-04-12 17:21:25.711 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - null null
2024-04-12 17:21:25.712 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map - 404 0 null 1.5028ms
2024-04-12 17:21:25.713 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5001/api/swagger-ui-standalone-preset.js.map, Response status code: 404
2024-04-12 17:21:29.429 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - null null
2024-04-12 17:21:29.431 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:29.432 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5001/api/Users/login?UseCookies=true - 204 null null 3.4366ms
2024-04-12 17:21:29.438 +07:00 [INF] Request starting HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - application/json 59
2024-04-12 17:21:29.441 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:29.441 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:29.443 +07:00 [INF] Executing endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:21:29.722 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2024-04-12 17:21:29.972 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2024-04-12 17:21:29.993 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2024-04-12 17:21:29.998 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-04-12 17:21:29.999 +07:00 [INF] Executed endpoint 'HTTP: POST /api/Users/login'
2024-04-12 17:21:30.003 +07:00 [INF] Request finished HTTP/2 POST https://localhost:5001/api/Users/login?UseCookies=true - 200 0 null 565.258ms
2024-04-12 17:21:30.006 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:21:30.009 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:30.010 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:30.010 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:21:30.043 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:21:30.044 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:30.045 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:30.046 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:21:30.212 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@___user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @___user_Id_0
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 17:21:30.227 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:21:30.250 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:21:30.250 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 244.5709ms
2024-04-12 17:21:30.270 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:21:30.286 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:21:30.286 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 243.264ms
2024-04-12 17:21:33.127 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:21:33.127 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:21:33.129 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:33.129 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:33.129 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:33.129 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:33.129 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:21:33.129 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:21:33.152 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:21:33.163 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:21:33.167 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@___user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @___user_Id_0
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 17:21:33.171 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:21:33.172 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 44.7113ms
2024-04-12 17:21:33.174 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/UserEntity - null null
2024-04-12 17:21:33.175 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:33.176 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:21:33.176 +07:00 [INF] Executing endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:21:33.177 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:21:33.177 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 50.3452ms
2024-04-12 17:21:33.217 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@___user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Bio", t."ConcurrencyStamp", t."DisplayName", t."Email", t."EmailConfirmed", t."ExpireVerifyCode", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."VerifyCode", p.id, p."AppUserId", p."FileName", p."fileBase64", p."isMain"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Bio", a."ConcurrencyStamp", a."DisplayName", a."Email", a."EmailConfirmed", a."ExpireVerifyCode", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."VerifyCode"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @___user_Id_0
    LIMIT 1
) AS t
LEFT JOIN "Photos" AS p ON t."Id" = p."AppUserId"
ORDER BY t."Id"
2024-04-12 17:21:33.220 +07:00 [INF] Executed endpoint 'HTTP: GET /api/UserEntity/ => GetUser'
2024-04-12 17:21:33.222 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/UserEntity - 200 null application/json; charset=utf-8 47.6434ms
2024-04-12 17:23:54.320 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:23:54.322 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:23:54.322 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:23:54.322 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:23:54.331 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:23:54.336 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:23:54.340 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:23:54.340 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 19.997ms
2024-04-12 17:28:24.053 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:28:24.055 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:28:24.055 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:28:24.055 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:28:24.089 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:28:24.101 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:28:24.105 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:28:24.105 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 51.283ms
2024-04-12 17:30:08.121 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:30:08.121 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:30:08.121 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:30:08.121 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:30:08.125 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:30:08.130 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:30:08.133 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:30:08.134 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 13.3232ms
2024-04-12 17:30:33.837 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:30:33.838 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:30:33.838 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:30:33.838 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:30:33.842 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:30:33.848 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:30:33.851 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:30:33.852 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 14.5917ms
2024-04-12 17:30:47.644 +07:00 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - null null
2024-04-12 17:30:47.644 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:30:47.644 +07:00 [INF] CORS policy execution successful.
2024-04-12 17:30:47.644 +07:00 [INF] Executing endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:30:47.651 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Activities" AS a
2024-04-12 17:30:47.656 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Title", t."Date", t."Description", t."Category", t."Venue", t."isCanceled", t."isPrivate", t0."DisplayName", t0."Username", t0."Bio", t0."Image", t0."Following", t0."FollowersCount", t0."FollowingCount", t0."AppUserId", t0."ActivityId", t0."Id", t.c
FROM (
    SELECT a."Id", a."Title", a."Date", a."Description", a."Category", a."Venue", a."isCanceled", a."isPrivate", (
        SELECT a1."Email"
        FROM "ActivityAttendees" AS a0
        INNER JOIN "AspNetUsers" AS a1 ON a0."AppUserId" = a1."Id"
        WHERE a."Id" = a0."ActivityId" AND a0."isHost"
        LIMIT 1) AS c
    FROM "Activities" AS a
    ORDER BY a."Date"
    LIMIT @__p_2 OFFSET @__p_1
) AS t
LEFT JOIN (
    SELECT a3."DisplayName", a3."UserName" AS "Username", a3."Bio", (
        SELECT p."fileBase64"
        FROM "Photos" AS p
        WHERE a3."Id" = p."AppUserId" AND p."isMain"
        LIMIT 1) AS "Image", EXISTS (
        SELECT 1
        FROM "UserFollowings" AS u
        INNER JOIN "AspNetUsers" AS a4 ON u."ObserverId" = a4."Id"
        WHERE a3."Id" = u."TargetId" AND a4."UserName" IS NULL) AS "Following", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u0
        WHERE a3."Id" = u0."TargetId") AS "FollowersCount", (
        SELECT count(*)::int
        FROM "UserFollowings" AS u1
        WHERE a3."Id" = u1."ObserverId") AS "FollowingCount", a2."AppUserId", a2."ActivityId", a3."Id"
    FROM "ActivityAttendees" AS a2
    INNER JOIN "AspNetUsers" AS a3 ON a2."AppUserId" = a3."Id"
) AS t0 ON t."Id" = t0."ActivityId"
ORDER BY t."Date", t."Id", t0."AppUserId", t0."ActivityId"
2024-04-12 17:30:47.664 +07:00 [INF] Executed endpoint 'HTTP: GET /api/Activity/ => GetActivityList'
2024-04-12 17:30:47.664 +07:00 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Activity?ListId=1&PageNumber=1&PageSize=10 - 200 null application/json; charset=utf-8 20.6977ms
